(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{1143:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticClass:"language-tex line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-tex"}},[n("code",[t._v("1.python语言的特性 解释、强、动\n2.python的垃圾回收机制\n3.值类型(值语义)和引用类型(引用语义)\n4.字符编码 ASCII、unicode、utf-8、乱码..\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("h2",{attrs:{id:"python语言特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python语言特性"}},[t._v("#")]),t._v(" Python语言特性")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("解释")]),t._v("｜编译型语言、"),n("strong",[t._v("强")]),t._v("｜弱类型、"),n("strong",[t._v("动")]),t._v("｜静类型")])]),t._v(" "),n("h3",{attrs:{id:"解释型、编译型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解释型、编译型"}},[t._v("#")]),t._v(" 解释型、编译型")]),t._v(" "),n("blockquote",[n("p",[t._v("参考链接: "),n("code",[t._v("http://c.biancheng.net/view/4136.html")]),n("br"),t._v(" "),n("code",[t._v("https://zhuanlan.zhihu.com/p/38855233")]),n("br"),t._v(" "),n("code",[t._v("https://www.jianshu.com/p/3bd1e1e44991")])])]),t._v(" "),n("p",[t._v('刚开始接触Python的时, 老师就告诉我"python是解释型语言".. 这样的说法没错,但不够具体,不严谨.')]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("首先明确一点"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("python、java、c这些高级语言不管是编译型还是解释型"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("都需要转换成计算机能听得懂的机器语言"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("的二进制"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("而转换的过程就需要借助编译器或解释器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n编译型 VS 解释型\n"""')]),t._v("\n○ 编译型语言"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  使用编译器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("提前将所有源代码一次性转换成二进制指令"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("即生成一个可执行程序\n\t“一次编译，无限次运行”"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("生成的可执行程序不再需要源代码和编译器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("So"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("编译型语言可以脱离开发环境运行\n\t但编译型语言不能跨平台"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("原因有二"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 可执行程序不能跨平台"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("eg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("不能将Windows下的可执行程序拿到Linux下使用\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 源代码不能跨平台"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("eg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Windows平台下Sleep函数以毫秒为时间单位"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("Linux平台下则是以秒为单位\n○ 解释型语言"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  使用解释器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("每次执行程序都需要边转换边执行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("只将用到的源代码转换成机器码"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("二进制"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("用不到的不需处理"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t“一次编写"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("到处运行” 解释型语言是跨平台的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("注意!所说的跨平台"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("是指源代码跨平台"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("而非解释器跨平台\n\teg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("以Python为例"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Python官方针对不同平台"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("比如 Windows、macOS、Linux"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("开发了不同的解释器\n\t这些解释器遵守同样的语法"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所以同一份源代码才能在不同平台上拥有相同的执行结果\n\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n下载程序\n"""')]),t._v("\n当我们说"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"下载一个程序(软件)"')]),t._v("时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("不同类型的语言有不同的含义\n   对于编译型语言"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("下载到的是可执行文件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("源代码被作者保留"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所以编译型语言的程序一般是闭源的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   对于解释型语言"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("下载到的是所有源代码"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("因为作者不给源代码就没法运行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所以解释型语言的程序一般是开源的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\npython虚拟机\n\t将需用到的py源代码/需执行的py文件 --(进行编译)-- 字节码 --(通过python的PVM虚拟机逐行解释)-- 机器码\n"""')]),t._v("\n随着Java等基于虚拟机的语言的兴起"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("我们不能再把语言纯粹地分成解释型和编译型这两种\nPython是一门先编译后解释的语言"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  编译的结果"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"字节码"')]),t._v("会放到内存的PyCodeObject中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("若需持久化保存"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("会写入pyc文件\n  什么时候需要pyc？\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v("的时候"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("会将"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v("的模块编译成"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pyc文件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("便于下次运行加快效率\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pyc文件的过期"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("会跟"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v("的模块最后的修改日期进行对比"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("若py文件"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("模块修改了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pyc文件就会重新生成\n    \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -- python本质与java c# 一样,python程序的执行原理都可以用两个字概括 -- 虚拟机、字节码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 在demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py真正运行之前"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("python编译器要对py文件中的源代码进行编译"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 在程序运行期间"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("编译结果存在于内存的PyCodeObject对象中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("python结束运行后"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("若编译结果保存到了pyc文件中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("那么下一次的运行相同的程序的时候"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("python会根据pyc文件中记录的编译结果直接建立内存中的PyCodeObject对象"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("而不用对源文件再次进行编译"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py模块会对应一个PyCodeObject对象"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("而里面的代码块都会一一对应一个PycodeObject对象"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("是嵌套的!\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py对应的PyCodeObject对象包含其他PyCodeObject对象"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 作用域、代码块、scope的环境、PycodeObject对象都是嵌套的\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br")])]),n("p",[t._v("我想,正因为python支持跨平台,所以大家更愿意称python是解释型语言!")]),t._v(" "),n("p",[n("img",{attrs:{src:a(371),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"强、动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#强、动"}},[t._v("#")]),t._v(" 强、动")]),t._v(" "),n("p",[t._v("动态语言: "),n("code",[t._v("a = 10")]),t._v(", a不用指定int\t运行时才会进行数据类型的检查")]),t._v(" "),n("p",[t._v("强类型语言: "),n("strong",[t._v("变量的数据类型一旦被定义,那就不会再改变,除非进行强转")]),n("br"),t._v("\n                     不同类型的变量不能进行运算(不考虑隐式转换)  eg:  "),n("code",[t._v("5 - '3'")]),t._v("报错"),n("br"),t._v("\n                     python很少会自动进行隐式转换..."),n("br"),t._v(" "),n("code",[t._v("5/2.5 = 2.0")]),t._v(" "),n("font",{attrs:{color:"gray"}},[t._v(" int类型和float类型计算会自动把int类型转换为float类型")])],1),t._v(" "),n("p",[n("font",{attrs:{color:"gray"}},[t._v("悄悄告诉你,"),n("strong",[t._v("linux中的shell是弱类型语言")]),t._v(",shell定义一个变量,随着调用方式的不同,数据类型可随意切换..")])],1),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"垃圾回收机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[t._v("#")]),t._v(" 垃圾回收机制!!!")]),t._v(" "),n("blockquote",[n("p",[t._v("参考:  "),n("code",[t._v("https://zhuanlan.zhihu.com/p/108683483")]),t._v(" ★"),n("br"),t._v(" "),n("code",[t._v("https://zhuanlan.zhihu.com/p/83251959")])])]),t._v(" "),n("p",[n("font",{attrs:{color:"brown"}},[t._v('Python引入了"标记-清除"与"分代回收"来分别解决引用计数的致命弱点循环引用和引用计数效率低的问题..')])],1),t._v(" "),n("h3",{attrs:{id:"变量存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量存储"}},[t._v("#")]),t._v(" 变量存储")]),t._v(" "),n("p",[t._v("内存中有两块区域: "),n("strong",[t._v("栈区")]),t._v(" stack与 "),n("strong",[t._v("堆区")]),t._v(" heap."),n("br"),t._v("\n        在定义变量时, "),n("em",[t._v("变量名与值内存地址的关联关系")]),t._v(" 存放于栈区 ("),n("font",{attrs:{color:"brown"}},[t._v("命名空间")]),t._v("),"),n("em",[t._v("变量值")]),t._v(" 存放于堆区,"),n("br"),t._v(" "),n("strong",[t._v("内存管理回收的则是堆区的内容")]),n("br"),t._v(" "),n("font",{attrs:{color:"blue"}},[t._v("简单理解栈区和堆区,栈区由操作系统自动分配释放,堆区由开发人员分配释放;前者地址连续,具备后进先出的特性,后者地址不连续,类似于数据结构中的链表..")])],1),t._v(" "),n("p",[t._v("举个栗子, 定义了两个变量 "),n("code",[t._v("x=10")]),t._v(", "),n("code",[t._v("y=20")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(372),alt:""}})]),t._v(" "),n("p",[t._v("当我们执行 "),n("code",[t._v("x=y")]),t._v(" 时, 内存中的栈区与堆区变化如下:")]),t._v(" "),n("p",[n("img",{attrs:{src:a(373),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"引用计数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#引用计数"}},[t._v("#")]),t._v(" 引用计数")]),t._v(" "),n("blockquote",[n("p",[t._v("引用计数:变量值被变量名关联的次数"),n("br"),t._v("\n                当值不再被任何名字关联,值的引用计数为0时应该被gc机制回收")])]),t._v(" "),n("p",[t._v("○ 引用计数增加\t-- \t创建a = 1、直接赋值 b=a 、 函数形参 、成为容器元素等"),n("br"),t._v("\n○ 引用计数减少    --     del、被重新赋值、容器销毁、删除容器元素等")]),t._v(" "),n("p",[t._v("引用计数的 "),n("em",[n("strong",[t._v("致命弱点")])]),t._v(" : 容器元素的循环引用(也称交叉引用)")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1,2,3]的引用计数为1  ")]),t._v("\nb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [4,5,6]的引用计数为1  ")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [4,5,6]的引用计数变为2")]),t._v("\nb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1,2,3]的引用计数变为2  ")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" a   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1,2,3]的引用计数变为1 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" b   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [4,5,6]的引用计数变为1")]),t._v("\n\n值不再被任何名字关联"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("值的引用计数为"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("应该被回收但因为循环引用的存在不能被回收"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nSo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("循环引用是致命的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("这与手动进行内存管理所造成的内存泄露毫无区别"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\nPs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("魔法方法`__del__` 析构函数\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("h3",{attrs:{id:"标记-清除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#标记-清除"}},[t._v("#")]),t._v(" 标记-清除")]),t._v(" "),n("p",[t._v("标记/清除算法的做法是当应用程序可用的内存空间被耗尽的时, 就会停止整个程序,然后进行两项工作"),n("br"),t._v("\n第一项则是标记,第二项则是清除  以前面a、b列表的循环引用为例.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(374),alt:""}})]),t._v(" "),n("p",[t._v("当我们同时删除a与b时,会清理到栈区中a与b的内容,只剩下堆区内二者的相互引用..."),n("br"),t._v("\n于是列表a与b都未被标记存活,二者会被清理掉,这样就解决了循环引用带来的内存泄漏问题!!!")]),t._v(" "),n("h3",{attrs:{id:"分代回收"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分代回收"}},[t._v("#")]),t._v(" 分代回收")]),t._v(" "),n("blockquote",[n("p",[t._v("基于引用计数的回收机制, 每次回收内存, 都需要把所有对象的引用计数都遍历一遍, 这是非常消耗时间的"),n("br"),t._v("\n于是引入了分代回收来提高回收效率, 分代回收采用的是用“"),n("strong",[t._v("空间换时间")]),t._v("”的策略")])]),t._v(" "),n("p",[n("strong",[t._v("核心思想")]),t._v(": "),n("font",{attrs:{color:"blue"}},[t._v("存活的越久的越不可能是垃圾")])],1),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("在历经多次扫描的情况下"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("都没有被回收的变量"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gc机制就会认为"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("该变量是经常用的变量"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gc对其扫描的频率会降低\n分代指的是根据存活时间来为变量划分不同等级"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("也就是不同的代"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("回收依然是使用引用计数作为回收的依据\n\n假设gc机制划分了"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("个代"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 新生代、青春代、老年代\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 新定义的变量"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("放到新生代这个等级中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("假设每隔"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("分钟扫描新生代一次"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("如果发现变量依然被引用"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("那么该对象的权重"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("权重本质就是个整数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("加一"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 当变量的权重大于某个设定得值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("假设为"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("会将它移动到更高一级的青春代"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("青春代的gc扫描的频率低于新生代"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("扫描时间间隔更长"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("假设"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("分钟扫描青春代一次"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("这样每次gc需要扫描的变量的总个数就变少了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("节省了扫描的总时间\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 接下来"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("青春代中的对象"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("也会以同样的方式被移动到老年代中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("也就是等级"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("代"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("越高"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("被垃圾回收机制扫描的频率越低"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  \n分代回收的弊端"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   例如一个变量刚刚从新生代移入青春代"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("该变量的绑定关系就解除了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("该变量应该被回收"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("但青春代的扫描频率低于新生代"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("该变量的回收就会被延迟"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("hr"),t._v(" "),n("h2",{attrs:{id:"值类型与引用类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#值类型与引用类型"}},[t._v("#")]),t._v(" 值类型与引用类型")]),t._v(" "),n("blockquote",[n("p",[t._v("变量分为  -- 值类型(值语义)和引用类型(引用语义)")]),t._v(" "),n("p",[t._v("给爷刻在骨髓里:"),n("br"),t._v(" "),n("font",{attrs:{color:"red"}},[n("strong",[t._v("引用是啥？引用就是指向.变量名指向自身绑定对象的内存地址!!")])]),n("br"),t._v(" "),n("font",{attrs:{color:"red"}},[n("strong",[t._v("一系列的绑定操作都是在传递某一对象的地址给某一变量名进行绑定!!")])])],1)]),t._v(" "),n("p",[n("strong",[t._v("值类型")]),n("br"),t._v(" "),n("code",[t._v("int a = 10")]),t._v("  必须指定类型,a中只能存整数"),n("br"),t._v(" "),n("font",{attrs:{color:"gray"}},[t._v("把变量的值直接保存在变量的存储区里,例如C语言,采用这种存储方式,每一个变量在内存中所占用的空间就要根据变量的实际大小而定,无法固定下来..")])],1),t._v(" "),n("p",[n("strong",[t._v("引用类型")]),n("br"),t._v(" "),n("code",[t._v("a = 10")]),n("br"),t._v("\n        问: a是数值10内存的别名？（X）;  a中存的是数值10？（X）"),n("br"),t._v("\n        答: 这与上面的 变量存储 部分的内容交相呼应... 简单来说."),n("br"),t._v("\n              a独立开发了一块空间(栈区), 里面保存(维护)的是 变量名与10的内存地址的关联关系."),n("br"),t._v("\n              因而 指向数值10的内存地址,是id(10)的一个引用..")]),t._v(" "),n("p",[n("font",{attrs:{color:"brown"}},[t._v("Python变量是引用语义,"),n("strong",[t._v("变量名")]),t._v(" 引用(指向) 绑定对象的"),n("strong",[t._v("内存地址")])]),t._v("  变量记录了对象在堆空间中的地址")],1),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("百度谷歌查阅文档"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("很多文章中都会这样说\n  变量名只是给对应的内存地址起了个别名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("就像是一个标签贴在了上面!! ☑️\n\t变量即某一对象的内存地址"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ☑️\n\t\t\n刚接触python时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("这样解释可以方便理解"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("但这些说法都是简说"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n具体来说"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("python不会对变量名单独作存储"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("但会将变量名与值内存地址的关联关系存到栈区"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("每个"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"变量名:id(值)"')]),t._v("在栈区中的所占空间的大小都是一样的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n记住!在python里"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("该栈区有个专业名词"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("叫做命名空间!!\n要条件反射"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("一旦看到某变量名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("就要知道指的是命名空间中该变量名与对象内存地址的关联关系"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("p",[n("strong",[t._v("\"'变量被赋值 = 变量被引用'\"")]),n("br"),t._v(" "),n("font",{attrs:{color:"brown"}},[t._v("绑定操作(eg 赋值)就是传递某一对象的内存地址, 接收/被绑定/被赋值 的变量与该内存地址进行绑定 ")])],1),t._v(" "),n("p",[n("img",{attrs:{src:a(375),alt:" "}})]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("举个赋值操作中最简单的例子"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a\n  内存"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("堆区"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" 内存地址xb001存储数值"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  命名空间"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("栈区"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("  xb201"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xb001\txb202"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xb001\n\n  a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -- 传递对象10的内存地址")]),t._v("\n    a开辟一块空间维护数值"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("的内存地址 a并没有存"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("这个值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("而是将a变量名与变量值"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("的地址绑定在了一起\n\tb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -- 传递变量a绑定对象的内存地址")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'被赋值 = 被引用'")]),t._v(" 等式右边先执行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("首先右边的a变量肯定是能找到的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("否则会报错"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    a变量被引用"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("拿到a与其关联的内存地址xb001传递给b变量"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    因为python内部的优化机制"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("只需将数值"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("的引用计数加"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("即可"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" z"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -- 传递一个新对象的内存地址")]),t._v("\n  \t“"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("“等号右边的x、y变量被引用"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("找到各自绑定对象的值进行运算"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("将运算后的对象的内存地址传递给变量z\n\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"引用"')]),t._v(" 这个概念"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("深浅拷贝、函数参数的传递等都与其息息相关"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"python中函数参数的传递"')]),t._v(" 都是引用"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("只是要区分引用的对象可变与不可变罢啦"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("hr"),t._v(" "),n("h2",{attrs:{id:"字符编码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符编码"}},[t._v("#")]),t._v(" 字符编码")]),t._v(" "),n("blockquote",[n("p",[t._v("首先要知道 在计算机中存储的数据是0101011111的样子,01的高低电平."),n("br"),t._v("\nb位|比特; B字节; kB千字节;M;G;T   1byte == 8bit")])]),t._v(" "),n("h3",{attrs:{id:"ascii"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ascii"}},[t._v("#")]),t._v(" ASCII")]),t._v(" "),n("blockquote",[n("p",[t._v("特点: 只有英文字符与数字的一一对应关系,一个英文字符占用1byte")])]),t._v(" "),n("p",[t._v("我们可以算一算, 一个字节包含8个bit比特位(8个二进制位),每个位置都可以选择填入0或者1"),n("br"),t._v("\n所以可以表示2^8=256个字符..  256个字符包含了英文字母以及一些符号."),n("br"),t._v("\n这就是熟知的 ASCII 编码. 十进制表示:0-127.")]),t._v(" "),n("h3",{attrs:{id:"unicode编码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#unicode编码"}},[t._v("#")]),t._v(" Unicode编码")]),t._v(" "),n("p",[t._v("为了让计算机识别自己国家的语言和英文,中国人订制了GBK..韩国人制定了Euc-kr..."),n("br"),t._v("\nGBK表的特点:"),n("br"),t._v("\n        1> 只有中文字符、英文字符与数字的一一对应关系 (Euc-kr同理)"),n("br"),t._v("\n        2> 一个英文字符对应1Bytes \t2^8=256\t可表示所有英文字符"),n("br"),t._v("\n        3> 一个中文字符对应2Bytes     2^16=65536\t可表示所有中文字符")]),t._v(" "),n("p",[t._v("为了将所有语言统一到一套编码里面,就产生了Unicode编码(所有字符都占用2字节).")]),t._v(" "),n("p",[t._v("UTF-8编码(可变长):"),n("br"),t._v("\n        Unicode编码中的一个英文字符会占用两个字节, 若英文字符很多,会浪费大量存储空间以及数据从内存写入硬盘的IO时间..."),n("br"),t._v("\n        所以有了UTF-8编码,该编码中一个英文字符占1Bytes,一个中文字符占3Bytes,生僻字用更多的Bytes存储")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("注意一点"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("文本编辑器输入任何字符都是最先存在于内存中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("是"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("编码的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("从内存存放于硬盘的过程中数据可以转换成任意其他编码"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n举个例子"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("文本编辑器中写入多国的字符\n  多国字符—√—》内存"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("格式的二进制"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ——√—》硬盘"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("格式的二进制"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n编码encode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 字符"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("内存"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("硬盘\n  由字符转换成内存中的"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("以及由"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("转换成其他编码的过程 \n  若文件中包含汉字、韩文等多国语言"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("能识别多国字符"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("但GBK不行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所以往硬盘中存储的时候"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("会使用utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("节省空间、减少IO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n解码decode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 硬盘"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("内存"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("字符\n  由其他编码转换成"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("以及由内存中的"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("转换成字符的过程 \n\n有三个问题"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("不想深究了 记住他三都是对的就行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("为啥存在内存中的字符编码格式不用utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("而是"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("?\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("编码是如何转成其他编码的?\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("为何只有"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("才会与字符相对应"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("文本编辑器输入任何字符都是最先存在于内存中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("是"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("编码的导致的?"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br")])]),n("h3",{attrs:{id:"乱码是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#乱码是什么"}},[t._v("#")]),t._v(" 乱码是什么？")]),t._v(" "),n("blockquote",[n("p",[t._v("归根到底,中间有个unicode在作祟...")])]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -*- coding:utf-8 -*-  指明该文件写入硬盘时采用的编码格式")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n在python2中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("将"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上"')]),t._v("从硬盘读入内存的解码格式是根据文件头的编码格式决定的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("这里是utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("没有文件头的话"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("就用编译器默认的编码"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n在打印x时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pycharm发现"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上"')]),t._v("对应的字符编码是utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("只有"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("才会直接对应字符"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所以需要进行了解码"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\npycharm默认的编码就是utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所以能正确显示"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n但用windows的cmd运行该代码"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("会乱码"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("因为windows cmd的默认编码是gbk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("若使用cmd的默认编码"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上"')]),t._v("用utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("编码到硬盘中的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("用gbk从硬盘中解码就会乱码"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\npython2的解决方案就是 x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('u"上"')]),t._v(" 保证"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上"')]),t._v("在内存中的编码是"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n\n在python3中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("不需要文件头"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("在内存中的编码格式都是"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("!!So不管在pychrm还是windows cmd上都能正确显示!!!\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("简单理解 字符与"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("是一起的!!!别分解成 字符"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("encode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("啦"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 我累了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n具体来说"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("python3中字节"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v("与Unicode字符的转化"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("包含"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("位的二进制数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("包含"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unicode")]),t._v("字符"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\tUnicode字符 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" `encode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("` "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v("二进制数据  即 字符 encode 二进制\n\t"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v("二进制数据 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" `decode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("` "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Unicode字符\t 即 二进制 decode 字符\n\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\nchr() 将一个整数转换为一个Unicode字符\nord() 将一个字符转换为它的ASCII整数值\n"""')]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br")])]),n("hr"),t._v(" "),n("h2",{attrs:{id:"python中的下划线"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python中的下划线"}},[t._v("#")]),t._v(" Python中的下划线")]),t._v(" "),n("p",[n("img",{attrs:{src:a(376),alt:""}})]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"环境变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[t._v("#")]),t._v(" 环境变量")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("Cpython就是翻译工作"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("将python代码翻译成计算机能听懂的!\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 环境变量\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在命令行下"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("使用可执行文件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("需要到可执行文件的路径下执行\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 若想在任意路径下执行可执行文件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("就需要在环境变量里配置\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 设置环境变量\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 用户变量"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 当前用户登陆到系统"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("能够识别的环境变量\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 系统变量"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 所有用户登陆到系统"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("能够识别的环境变量\n     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" python配置"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 安装时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("add to path选中\n       "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" python安装路径"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 找到 python"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exe\n       "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" python安装路径的script路径"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 找到 pip"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exe\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 需要注意"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("在终端输入的python、pip install"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("执行的是哪个环境\n   与在环境变量里设置的a先后顺序有关\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" pycharm中开发项目"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("需要注意使用的解释器是哪个\n   pycharm可以创建虚拟环境"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("虚拟环境用于解决版本共存的问题"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  \nmac而言"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  默认在 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Library"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Frameworks"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Python"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("framework"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Versions 这个路径下\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Library"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Frameworks"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Python"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("framework"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Versions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.8")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bin")]),t._v(" 有unix可执行文件pip\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Library"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Frameworks"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Python"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("framework"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Versions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.8")]),t._v(" 有个unix可执行文件python\n  Ps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("随便网上搜一篇"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("下载应用点击下一步下一步就在mac上安装好python啦!\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br")])]),n("p",[n("img",{attrs:{src:a(377),alt:""}})]),t._v(" "),n("hr")])}),[],!1,null,null,null);s.default=r.exports},371:function(t,s,a){t.exports=a.p+"assets/img/python_explain.36b804fa.png"},372:function(t,s,a){t.exports=a.p+"assets/img/variable_storage_1.2cb77ebc.jpeg"},373:function(t,s,a){t.exports=a.p+"assets/img/variable_storage_2.de73ed54.jpeg"},374:function(t,s,a){t.exports=a.p+"assets/img/mark_removal.6c43a482.jpeg"},375:function(t,s,a){t.exports=a.p+"assets/img/quotation_semantics.b834592e.png"},376:function(t,s,a){t.exports=a.p+"assets/img/underline.c8baf309.png"},377:function(t,s,a){t.exports=a.p+"assets/img/virtual_env.cea6747d.jpeg"}}]);