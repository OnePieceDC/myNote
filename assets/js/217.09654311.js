(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{1153:function(s,t,a){"use strict";a.r(t);var n=a(0),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[s._v("#")]),s._v(" 模块")]),s._v(" "),a("blockquote",[a("p",[s._v("参考链接: "),a("code",[s._v("https://zhuanlan.zhihu.com/p/109127048")])])]),s._v(" "),a("h3",{attrs:{id:"模块导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块导入"}},[s._v("#")]),s._v(" 模块导入")]),s._v(" "),a("h5",{attrs:{id:"导入模块的规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入模块的规范"}},[s._v("#")]),s._v(" 导入模块的规范")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 1. python内置模块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 2. 第三方模块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 3. 程序员自定义模块")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("font",{attrs:{color:"blue"}},[s._v("Ps: 在文件开头导入模块属于全局作用域, 在函数内导入的模块则属于局部的作用域")])],1),s._v(" "),a("h5",{attrs:{id:"import语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import语句"}},[s._v("#")]),s._v(" import语句")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 文件名:foo.py")]),s._v("\n__all__"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'x'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 该列表中所有的元素必须是字符串类型,每个元素对应foo.py中的一个名字")]),s._v("\n                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    __all__ 用于控制 `from foo import *` 语句中 * 代表的意思  ")]),s._v("\nx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("change")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("global")]),s._v(" x\n    x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'from the func'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("想在run.py文件中引用foo.py中的功能, 需要使用 "),a("code",[s._v("import foo")]),s._v(", "),a("font",{attrs:{color:"blue"}},[s._v("首次导入模块会做三件事")]),s._v(":"),a("br"),s._v("\n1> 执行源文件foo.py代码"),a("br"),s._v("\n2> 产生一个新的名称空间用于存放源文件执行过程中产生的名字"),a("br"),s._v("\n3> 在当前执行文件run.py所在的全局名称空间中得到一个名字foo, 该名字指向新创建的模块名称空间"),a("br"),s._v("\n     若要引用模块名称空间中的名字,需要加上该前缀")],1),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 文件名:run.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" foo\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 引用模块foo中变量x的值赋值给当前名称空间中的名字a")]),s._v("\nfoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 调用模块foo的get函数")]),s._v("\nfoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("change"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 调用模块foo中的change函数")]),s._v("\nobj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 使用模块foo的类Foo来实例化，进一步可以执行obj.func()")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("注意:")]),s._v(" 加上 "),a("code",[s._v("foo.")]),s._v("作为前缀就相当于指名道姓地说明要引用foo名称空间中的名字, 所以"),a("font",{attrs:{color:"green"}},[s._v("肯定不会与当前执行文件所在名称空间中的名字相冲突")]),s._v(", 并且若当前执行文件的名称空间中存在x, 执行 "),a("code",[s._v("foo.get()")]),s._v(" 或 "),a("code",[s._v("foo.change()")]),s._v(" 操作的都是 "),a("strong",[s._v("源文件中的")]),s._v(" 全局变量x")],1),s._v(" "),a("h5",{attrs:{id:"from-import语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from-import语句"}},[s._v("#")]),s._v(" from-import语句")]),s._v(" "),a("p",[s._v("from..import..与import语句基本一致,"),a("font",{attrs:{color:"blue"}},[s._v("也会有那三个步骤")]),s._v(" "),a("strong",[s._v("唯一不同的是:")]),a("br"),s._v("\n使用"),a("code",[s._v("import foo")]),s._v("导入模块后, 引用模块中的名字都需要加上foo.作为前缀;"),a("br"),s._v("\n而使用 "),a("code",[s._v("from foo import x,get,change,Foo")]),s._v(" 则可以在当前执行文件中直接引用模块foo中的名字.")],1),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 文件名:run.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("change  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 将模块foo中的x和get导入到当前执行文件run.py的全局名称空间")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 直接使用模块foo中的x赋值给a")]),s._v("\nget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 直接执行foo中的get函数")]),s._v("\nchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 即便是当前有重名的x,修改的仍然是源文件foo.py中的x")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n思考了下,change()后,run.py中a变量的值是否一同改变,取决于foo.py中的x变量是可变类型,还是不可变类型.\n下面 "重复导入" 的部分会包含这部分思考的分析.\n"""')]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 把foo中所有的名字都导入到当前执行文件的名称空间中")]),s._v("\n若我们需要引用模块中的名字过多的话"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("可以采用上述的导入形式来达到节省代码量的效果"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n这会导致我们无法搞清楚究竟从源文件中导入了哪些名字到当前位置"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("这极有可能与当前位置的名字产生冲突\n需要强调的是"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 只能在模块最顶层使用的方式导入"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("在函数内则非法"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n模块的编写者可以在自己的文件中定义__all__变量用来控制"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("代表的意思\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[a("font",{attrs:{color:"blue"}},[s._v("无需加前缀的好处是使得我们的代码更加简洁, 坏处则是容易与当前名称空间中的名字冲突.")]),s._v("\n如果当前名称空间存在相同的名字, 则后定义的名字会覆盖之前定义的名字.")],1),s._v(" "),a("h5",{attrs:{id:"重复导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重复导入"}},[s._v("#")]),s._v(" 重复导入")]),s._v(" "),a("p",[a("strong",[s._v("强调:")]),s._v(" "),a("font",{attrs:{color:"brown"}},[s._v("第一次导入模块已经将其加载到内存空间了,之后的重复导入( "),a("em",[s._v("不管是当前可执行文件的重复导入,还是多个文件导入同一个模块")]),s._v(" )会直接引用内存中已存在的模块(已经存在的命名空间),不会重复执行导入的模块")])],1),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""执行run.py 结果如下:\n10\n[]\n12\n[1]\n10\n[1]\n\n这样分析:\nscope(run.py)     scope(a.py)             scope(b.py)      heap堆区\nx:Ox101           x:Ox101 --\x3e x:Ox301     a                Ox101 10\ny:Ox201           y:Ox201                                  Ox201 [] --\x3e [1]\n                  change_x                                 Ox301 12\n                  change_y                                 id(change_x)\n                                                           id(change_y)\n记住一个原则即可: \n  `from a import x,y` 方式导入进scope(run.py)的x,y \n     x是不可变变量,源文件a.py中的x改变了,run.py中的x不会改变,因为引用计数不为0\n     y是可变变量,其值可以原地改变.需要注意哈!\n  `import a` 方式导入,要访问scope(a.py)中的名字 是需要加前缀的!\n     scope(a.py)中的x值变了,a.x方式访问,结果肯定也会变啦.\n"""')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- a.py")]),s._v("\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("change_x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("global")]),s._v(" x\n    x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("change_y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- run.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 10")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# []")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" b\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 10")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [1]")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- b.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" a\n\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("change_x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("change_y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 12")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [1]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br")])]),a("h5",{attrs:{id:"其它导入语法-as"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它导入语法-as"}},[s._v("#")]),s._v(" 其它导入语法(as)")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" f  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 为导入的模块foo在当前位置起别名f")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" get "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" get_x  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 还可以为导入的某个名字起别名")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("为关键字import后导入的名字起别名,有三大好处"),a("br"),s._v("\n1> 被导入的名字过长时采用起别名的方式来精简代码;"),a("br"),s._v("\n2> 为被导入的名字起别名可以很好地避免与当前名字发生冲突;"),a("br"),s._v("\n3> 还可以保持调用方式的一致性")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n我们有两个模块json和pickle同时实现了load方法,作用是从一个打开的文件中解析出结构化的数据.\n但解析的格式不同可以用下述代码有选择性地加载不同的模块\n"""')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" data_format "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" json "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" serialize   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 如果数据格式是json,那么导入json模块并起别名/命名为serialize")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" data_format "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pickle'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" pickle "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" serialize "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 如果数据格式是pickle,那么导入pickle模块并命名为serialize")]),s._v("\n\ndata"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("serialize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("load"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 最终调用的方式是一致的")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"循环导入问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环导入问题"}},[s._v("#")]),s._v(" 循环导入问题")]),s._v(" "),a("p",[a("font",{attrs:{color:"blue"}},[s._v("循环导入问题指的是在一个模块加载/导入的过程中导入另外一个模块, 而在另外一个模块中又返回来导入第一个模块中的名字,  "),a("strong",[s._v("由于第一个模块尚未加载完毕")]),s._v(" , 所以引用失败、抛出异常.")]),a("br"),s._v(" "),a("font",{attrs:{color:"brown"}},[a("strong",[s._v("究其根源")]),s._v(" 就是在python中, 同一个模块只会在第一次导入时执行其内部代码, 再次导入该模块时, 即便是该模块尚未完全加载完毕也不会去重复执行内部代码..")])],1),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- m1.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'正在执行m1.py文件'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" m2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" y\n\nx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'m1'")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- m2.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'正在执行m2.py文件'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" m1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" x\n\ny"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'m2'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- run.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" m1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h5",{attrs:{id:"测试一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试一"}},[s._v("#")]),s._v(" 测试一")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("★ 运行run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" `"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" m1` run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py导入模块m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("开始执行m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py中的内部代码\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" `"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" m2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" y` m1模块中导入了m2模块"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("开始执行m2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py中的内部代码\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" `"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" m1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" x` m2模块中又导入了还未来得及加载完的m1模块\n                     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("注意"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("此处m1模块被重复导入了"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("不会重新执行m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py内部代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                      并引用scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("还没来得及加载的x名字"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("报错"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h5",{attrs:{id:"测试二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试二"}},[s._v("#")]),s._v(" 测试二")]),s._v(" "),a("p",[a("strong",[s._v("强调:")]),s._v(" "),a("font",{attrs:{color:"brown"}},[s._v("执行文件不等于导入文件")]),s._v(", 比如执行m1.py不等于导入了m1"),a("br"),s._v(" "),a("font",{attrs:{color:"red"}},[s._v("即 执行文件开辟的空间跟首次导入该模块开辟的空间不是同一个空间!")])],1),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("★ 运行m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" `"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" m2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" y` m1模块中导入了m2模块"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("开始执行m2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py中的内部代码\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" `"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" m1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" x` m2模块中导入了m1模块"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("开始执行m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py中的内部代码\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" `"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" m2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" y` "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("注意"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("此处m2模块被重复导入了"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("不会重新执行m2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py内部代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                      So"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" m1模块中又导入了还未来得及加载完的m2模块\n                      并引用scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("还没来得及加载的y名字"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("报错"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n正在执行m1.py文件\n正在执行m2.py文件\n正在执行m1.py文件\ncannot import name \'y\' from \'m2\'\n"""')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h5",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[s._v("#")]),s._v(" 解决方案")]),s._v(" "),a("p",[s._v("方案一: 导入语句放到最后, 保证在导入时, 所有名字都已经加载过"),a("br"),s._v("\n方案二: 导入语句放到函数中, 只有在调用函数时才会执行其内部代码")]),s._v(" "),a("p",[a("font",{attrs:{color:"gray"}},[s._v("循环导入问题大多数情况是因为程序设计失误导致, 上述解决方案也只是在烂设计之上的无奈之举,在我们的程序中应该尽量避免出现循环/嵌套导入!!")]),a("br"),s._v(" "),a("font",{attrs:{color:"brown"}},[s._v("如果多个模块确实都需要共享某些数据, 可以将共享的数据集中存放到某一个地方,然后进行导入")])],1),s._v(" "),a("h3",{attrs:{id:"模块的查找顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块的查找顺序"}},[s._v("#")]),s._v(" 模块的查找顺序")]),s._v(" "),a("p",[a("font",{attrs:{color:"blue"}},[s._v("模块分为四个通用类别:")]),a("br"),s._v("\n1> 使用纯Python代码编写的py文件"),a("br"),s._v("\n2> 包含一系列模块的包"),a("br"),s._v("\n3> 使用C编写并链接到Python解释器中的内置模块"),a("br"),s._v("\n4> 使用C或C++编译的扩展模块")],1),s._v(" "),a("p",[a("font",{attrs:{color:"blue"}},[s._v("搜索模块的路径与优先级: ")]),a("br"),s._v("\n○ 在导入一个模块时, 若该模块已加载到内存中, 则直接引用;"),a("br"),s._v("\n○ 否则会优先查找内置模块;"),a("br"),s._v("\n○ 然后按照从左到右的顺序依次检索sys.path中定义的路径, 直到找模块对应的文件为止, 否则抛出异常.")],1),s._v(" "),a("p",[a("code",[s._v("sys.path")]),s._v("也被称为 "),a("strong",[s._v("模块的搜索路径")]),s._v(" , 它是一个列表类型")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\nsys.path中的第一个路径通常为空,代表执行文件所在的路径\n列表中的每个元素都可以当作一个目录来看:\n   在列表中会发现有.zip或.egg结尾的文件,二者是不同形式的压缩文件\n   Python支持从一个压缩文件中导入模块\n"""')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sys\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/Users/One_Piece/Documents'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/Library/Frameworks/Python.framework/Versions/3.8/lib/python38.zip'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/lib-dynload'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/Users/One_Piece/Library/Python/3.8/lib/python/site-packages'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("strong",[s._v("sys.path中的第一个路径通常为空, 代表执行文件所在的路径.")]),a("br"),s._v("\n1> 在被导入模块与执行文件在同一目录下时肯定是可以正常导入的;"),a("br"),s._v("\n2> 针对被导入的模块与执行文件在不同路径下的情况, 为了确保模块对应的源文件仍可以被找到."),a("br"),s._v("\n     需要将源文件foo.py所在的路径添加到sys.path中, 假设foo.py所在的路径为/pythoner/projects/")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sys\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 也可以使用sys.path.insert()")]),s._v("\nsys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("r'/pythoner/projects/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" foo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"py文件的用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#py文件的用途"}},[s._v("#")]),s._v(" PY文件的用途")]),s._v(" "),a("p",[s._v("1> 被当主程序/脚本执行  "),a("code",[s._v("__name__")]),s._v(" 被赋值为 "),a("code",[s._v("__main__")]),a("br"),s._v("\n2> 被当模块导入   "),a("code",[s._v("__name__")]),s._v(" 被赋值为模块名")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- foo.py")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 略 略 略")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- foo.py被当做模块导入时运行的代码,不会执行测试代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- foo.py被当做脚本执行时运行的测试代码   ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("hr"),s._v(" "),a("h2",{attrs:{id:"包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包"}},[s._v("#")]),s._v(" 包")]),s._v(" "),a("blockquote",[a("p",[s._v("参考链接: "),a("code",[s._v("https://zhuanlan.zhihu.com/p/109221768")])])]),s._v(" "),a("h3",{attrs:{id:"包是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包是什么"}},[s._v("#")]),s._v(" 包是什么?")]),s._v(" "),a("p",[s._v("随着模块数目的增多, 把所有模块不加区分地放到一起也是极不合理的.创建一个包可以把模块组织到一起."),a("br"),s._v("\n包就是一个含有"),a("code",[s._v("__init__.py")]),s._v("文件的文件夹, 文件夹内可以组织 "),a("strong",[s._v("子模块")]),s._v(" 或 "),a("strong",[s._v("子包")]),s._v(" !")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" aaa                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 顶级包")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" __init__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 子模块")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" m2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" bbb              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 子包")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" __init__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" m3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py      \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("font",{attrs:{color:"brown"}},[a("strong",[s._v("强调:")])]),a("br"),s._v("\n1> "),a("font",{attrs:{color:"blue"}},[s._v("py3中, 即使包下没有 "),a("code",[s._v("__init__.py")]),s._v(" 文件, "),a("code",[s._v("import 包")]),s._v(" 也不会报错; ")]),a("br"),s._v("\n     而在py2中, 包下 "),a("strong",[s._v("一定")]),s._v(" 要有该文件, 否则import包报错!!"),a("br"),s._v("\n2> 记住, "),a("font",{attrs:{color:"brown"}},[a("strong",[s._v("包属于模块的一种")]),s._v(", 因而包以及包内的模块均是用来被导入使用的, 而绝非被直接执行!!")])],1),s._v(" "),a("h3",{attrs:{id:"包的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包的使用"}},[s._v("#")]),s._v(" 包的使用")]),s._v(" "),a("p",[s._v("首次导入包 "),a("font",{attrs:{color:"gray"}},[s._v("如 "),a("code",[s._v("import pool")])]),s._v("  同样会做三件事:"),a("br"),s._v("\n1> 执行包下的 "),a("code",[s._v("__init__.py")]),s._v(" 文件"),a("br"),s._v("\n2> 产生一个新的名称空间用于存放 "),a("code",[s._v("__init__.py")]),s._v(" 执行过程中产生的名字"),a("br"),s._v("\n3> 在当前执行文件所在的名称空间中得到一个名字pool, 该名字指向 "),a("code",[s._v("__init__.py")]),s._v(" 的名称空间")],1),s._v(" "),a("p",[a("font",{attrs:{color:"brown"}},[s._v("导包就是在导入包下的 "),a("code",[s._v("__init__.py")]),s._v("文件")])],1),s._v(" "),a("p",[s._v("★ 我们可以使用包将aaa.py文件中的三个函数放到不同的文件中.而且不影响函数原本的调用方式.")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n# -- aaa.py\ndef func1():pass\ndef func2():pass\ndef func3():pass\n"""')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" aaa                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 顶级包")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" __init__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 子模块")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" m2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" bbb              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 子包")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" __init__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" m3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py  \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[a("font",{attrs:{color:"brown"}},[a("strong",[s._v("绝对导入:")]),s._v(" 一般以顶级包为起始 ")]),s._v("  (往往会将顶级包加入sys.path路径中)")],1),s._v(" "),a("p",[a("font",{attrs:{color:"brown"}},[a("strong",[s._v("相对导入:")]),s._v(" 开始位置的 "),a("code",[s._v(".")]),s._v(" 代表当前文件所在的目录, "),a("code",[s._v("..")]),s._v(" 代表当前目录的上一级目录, 以此类推! ")]),a("br"),s._v("\n针对包内部模块之间的相互导入推荐使用相对导入,需要特别强调"),a("br"),s._v("\n1> "),a("font",{attrs:{color:"red"}},[s._v("相对导入只能在包内部使用, 用相对导入不同目录下的模块是非法的,不能出包! ")]),a("br"),s._v("\n2> "),a("font",{attrs:{color:"blue"}},[s._v("无论是import还是from-import. "),a("br"),s._v("     除相对导入开始位置的点,导入语句中其它位置的点代表的是路径分隔符,并且"),a("code",[s._v(".")]),s._v("左侧必须是一个包")]),s._v("!"),a("br"),s._v("\n3> "),a("font",{attrs:{color:"purple"}},[s._v("使用相对导入的python文件不能作为直接执行的文件!!")])],1),s._v(" "),a("p",[s._v("★ 包里各个文件的代码如下"),a("br"),s._v(" "),a("font",{attrs:{color:"green"}},[a("em",[s._v("把包内部很深的一些类、函数,给外部使用,只需在"),a("code",[s._v("__init__.py")]),s._v("里 注册/导入 一下!!")])]),a("br"),s._v(" "),a("font",{attrs:{color:"green"}},[a("em",[s._v("不在"),a("code",[s._v("__init__.py")]),s._v("里注册的,本意是给包内部用,如果外部想用,使用完整路径导入使用!")])])],1),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- m1.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- m2.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- m3.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- m4.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- aaa/__init__.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 把包内部很深的一些类、函数,给外部使用,只需在__init__.py里 注册/导入 一下!!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 不在__init__.py里注册的,本意是给包内部用,如果外部想用,使用完整路径导入使用!")]),s._v("\n__all__"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'func1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'func2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'func3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bbb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 用于限制`from aaa import *`中的*号")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" aaa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("m1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" func1      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 绝对导入 等同于from .m1 import func1 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("m2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" func2         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 相对导入     ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bbb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("m3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" func3     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 等同于 from aaa.bbb.m3 import func3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" bbb             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 拿到aaa.bbb")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bbb/__init__.py")]),s._v("\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- run.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 不管是`import ..`,还是`from .. import ..`导入过程中都会依次执行包下的__init__.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" aaa\naaa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("func1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 来自aaa.__init__")]),s._v("\naaa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("func2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 来自aaa.__init__")]),s._v("\naaa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("func3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 来自aaa.__init__")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("aaa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bbb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 来自aaa.__init__")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("aaa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bbb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 来自bbb.__init__")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 分析下该导入过程,执行包aaa的__init__.py,用到了bbb")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    再执行包bbb下的__init__.py,里面并没有m3,所以就会去sys.path路径里面找")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    注意:包是模块的一种,所以也是要遵循模块查找顺序的!!!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" aaa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bbb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("m3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" func3\nfunc3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\nscope(包aaa)     scope(包bbb)     scope(run.py)\nfunc1            func4            aaa\nfunc2            x                func3\nfunc3\nbbb\n"""')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br")])]),a("hr"),s._v(" "),a("h2",{attrs:{id:"软件开发目录规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件开发目录规范"}},[s._v("#")]),s._v(" 软件开发目录规范")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" conf               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 存放配置文件")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" settings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" lib                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 库(模块) 存放程序中常用的自定义模块,里面通常是一些共享的功能")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" core               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 存放核心业务逻辑(展示给用户看的东西)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" api                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 存放接口文件,接口主要用于为业务逻辑提供数据操作")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py    \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" db                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 存放操作数据库相关文件,主要用于与数据库交互")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("txt\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" log                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 存放程序的日志信息")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" access"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("log\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 程序的启动文件,一般放在项目的根目录下")]),s._v("\n                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    因为在运行时会默认将运行文件所在的文件夹作为sys.path的第一个路径")]),s._v("\n                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    这样就省去了处理环境变量的步骤")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 安装、部署、打包的脚本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" README             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 项目说明文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" requirements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("txt   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 存放软件依赖的外部Python包列表")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n- bin            # -- 存放可执行文件\n    - run.py     # -- 整个程序的入口文件\n"""')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[a("strong",[s._v("setup.py")]),a("br"),s._v(" "),a("font",{attrs:{color:"gray"}},[s._v("一般来说,用setup.py来管理代码的打包、安装、部署问题.")]),a("br"),s._v(" "),a("font",{attrs:{color:"gray"}},[s._v("业界标准的写法是用Python流行的打包工具setuptools来管理这些事情,这种方式普遍应用于开源项目中.")]),a("br"),s._v(" "),a("font",{attrs:{color:"gray"}},[s._v("不过这里的核心思想不是用标准化的工具来解决这些问题,而是说,一个项目一定要有一个安装部署工具. ")]),a("br"),s._v(" "),a("font",{attrs:{color:"gray"}},[s._v("能快速便捷的在一台新机器上将环境装好、代码部署好和将程序运行起来.")])],1),s._v(" "),a("p",[a("strong",[s._v("requirements.txt")]),a("br"),s._v(" "),a("font",{attrs:{color:"gray"}},[s._v("requirements.txt文件的存在是为了方便开发者维护软件的依赖库.")]),a("br"),s._v(" "),a("font",{attrs:{color:"gray"}},[s._v("我们需要将开发过程中依赖库的信息添加进该文件中,避免在 setup.py安装依赖时漏掉软件包.")]),a("br"),s._v(" "),a("font",{attrs:{color:"gray"}},[s._v("同时也方便了使用者明确项目引用了哪些Python包.")]),a("br"),s._v(" "),a("font",{attrs:{color:"gray"}},[s._v("这个文件的格式是每一行包含一个包依赖的说明,通常是flask>=0.10这种格式,要求是这个格式能被pip识别.")]),a("br"),s._v(" "),a("font",{attrs:{color:"gray"}},[s._v("这样就可以简单的通过"),a("code",[s._v("pip install -r requirements.txt")]),s._v("来把所有Python依赖库都装好了!")])],1),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- run.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("os\nBASE_DIR "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("abspath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__file__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nsys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BASE_DIR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" core "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" src\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n__file__ 当前文件所在路径\nos.path.abspath(__file__) 当前文件的绝对路径\nos.path.dirname() 获取当前文件所在的文件夹路径\n"""')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# settings.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" os\n\nBASE_DIR"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("abspath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__file__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nDB_PATH"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BASE_DIR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'db'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'db.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nLOG_PATH"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BASE_DIR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'log'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'access.log'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nLOGIN_TIMEOUT"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("hr")])}),[],!1,null,null,null);t.default=r.exports}}]);