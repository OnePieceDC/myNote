(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{1216:function(e,a,t){"use strict";t.r(a);var r=t(0),n=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[t("code",[e._v("*")]),e._v(" / % binary greatest() least() ASCII() replace() week() yearweek() date_add() date_format()"),t("br"),e._v("\nmysql版本：select version();"),t("br"),e._v("\n当前登录用户：select user();"),t("br"),e._v("\n当前日期'年-月-日 时-分-秒'：select now();"),t("br"),e._v("\n'年-月-日': select curdate();"),t("br"),e._v("\n'时-分-秒': select curtime();")]),e._v(" "),t("p",[e._v("system clear;")]),e._v(" "),t("p",[e._v("sql不区分大小写！")]),e._v(" "),t("blockquote",[t("p",[e._v("create      insert      ;     drop      delete      ;      alter      update      ;      show      select")])]),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[e._v("#")]),e._v(" 数据库")]),e._v(" "),t("p",[e._v("创建：create database [if not exists] database_name default charset utf8 collate utf8_general_ci;"),t("br"),e._v("\n删除库：drop database database_name;"),t("br"),e._v("\n修改:   alter database database_name charset latin1;"),t("br"),e._v("\n查看：show databases;"),t("br"),e._v("\n     查看指定数据库的创建信息：show create database database_name;"),t("br"),e._v("\n     返回当前使用的数据库的名称'可以设置列别名': select database() [as 'column_name'];")]),e._v(" "),t("p",[e._v("连接：mysql -uroot -p"),t("br"),e._v("\n退出：exit"),t("br"),e._v("\n使用：use database_name;")]),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"数据表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据表"}},[e._v("#")]),e._v(" 数据表")]),e._v(" "),t("p",[e._v("创建："),t("br"),e._v("\n     create table [if not exists] table_name ("),t("br"),e._v("\n             列名 类型 约束,"),t("br"),e._v("\n             [列名 类型 约束]"),t("br"),e._v("\n     )default charset=utf8mb4;\n删除表：drop table [if exists] table_name;"),t("br"),e._v("\n修改：alter table table_name add|modify|change|rename to|drop;"),t("br"),e._v("\n        添加字段：alter table 表名 add 列名 类型 约束 [after|frist  table_field];"),t("br"),e._v("\n        删除字段：alter table 表名 drop column 列名;"),t("br"),e._v("\n        修改字段类型：alter table table_name modify column 列名 类型;"),t("br"),e._v("\n        修改字段类型 + 名称: alter table 表名 change 原列名 新列名 新类型;"),t("br"),e._v("\n        默认值:"),t("br"),e._v("\n                修改字段默认值  alter table 表名 alter 列名 set default 1000;"),t("br"),e._v("\n                删除字段默认值  alter table 表名 alter 列名 drop default ;"),t("br"),e._v("\n        表名："),t("br"),e._v("\n                alter table 旧表名 rename 新表名;"),t("br"),e._v("\n                rename table 旧表名 to 新表名;"),t("br"),e._v("\n        修改存储引擎:"),t("br"),e._v("\n                alter table table_name engine=innodb;"),t("br"),e._v("\n查看："),t("br"),e._v("\n        哪些表: show tables;"),t("br"),e._v("\n        表结构：desc table_name [字段名];  -- 可以只看其中某一字段的结构"),t("br"),e._v("\n        创建表结构的sql语句: show create table table_name[\\G]; -- 表名加\\G查看表详细信息")]),e._v(" "),t("p",[e._v("复制表:"),t("br"),e._v(" "),t("code",[e._v("create table t6 select * from t5;")]),e._v(" -- 表结构和数据"),t("br"),e._v(" "),t("code",[e._v("create table t6 select * from t5 where 1<0;")]),e._v(" -- 表结构 空表"),t("br"),e._v("\n克隆表：like｜as")]),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"表记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表记录"}},[e._v("#")]),e._v(" 表记录")]),e._v(" "),t("p",[e._v("增加：insert into table_name values|set ... 共有四种方式(全列|指定列|多行批量|使用set子句)"),t("br"),e._v("\n        多行批量:  若不指定列则所有列的字段值都要一一对应赋值."),t("br"),e._v("\n                insert into table_name[(字段名,字段名...)] values (字段值,字段值...),(字段值,字段值...);"),t("br"),e._v("\n        使用set子句: 可以不按照列顺序插入数据,对允许空值的列可以不插入."),t("br"),e._v("\n                insert into table_name set 第2列字段值='',第4列字段值='';"),t("br"),e._v("\n        插入查询结果: 创建一个B表,将A表中的所有数据插入到B表中"),t("br"),e._v("\ninsert into B select * from A;"),t("br"),e._v("\n删除记录：delete from table_name where 条件;"),t("br"),e._v("\n修改：update table_name set 字段1=值1[,字段2=值2,...] [where条件];"),t("br"),e._v("\n        replace into table_name values (字段值,字段值,字段值...);"),t("br"),e._v("\n        <举栗>"),t("br"),e._v(" "),t("code",[e._v("update tb1 set age=age+1 where id=2;")]),e._v("  --  整型 age在原有基础上加1"),t("br"),e._v(" "),t("code",[e._v('update L3 set name=concat(name,"123") where id=2;')]),e._v("  --  concat一个函数，可以拼接字符串")]),e._v(" "),t("p",[t("strong",[e._v("查看：!!!!")])]),e._v(" "),t("p",[e._v("清空表:"),t("br"),e._v("\n        delete from table_name;"),t("br"),e._v("\n        一条一条的删除记录  若有自增id,新增的数据id以删除前的最后一个id值的下一个作为起始值."),t("br"),e._v("\n        truncate  table_name;"),t("br"),e._v("\n        直接清空表  适用于数据量大,速度快,无法回滚,且新id从零开始.")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("ps: 若在windows系统中,插入中文字符,select的结果为空白,可以将所有字符编码统一设置成gbk！")])])}),[],!1,null,null,null);a.default=n.exports}}]);