(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{1156:function(s,t,n){"use strict";n.r(t);var a=n(0),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("项目从无到有会经历以下几个步骤:")]),s._v(" "),a("ol",[a("li",[s._v("需求分析")]),s._v(" "),a("li",[s._v("设计程序以及程序的架构")]),s._v(" "),a("li",[s._v("分任务开发程序")]),s._v(" "),a("li",[s._v("测试")]),s._v(" "),a("li",[s._v("上线运行")])])]),s._v(" "),a("p",[s._v("开发 "),a("strong",[s._v("ATM+购物车系统")]),s._v(" , ATM的实现类似于银行自助提款机核心业务, 购物车的实现类似于淘宝商城购物系统.")]),s._v(" "),a("hr"),s._v(" "),a("h6",{attrs:{id:"需求分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需求分析"}},[s._v("#")]),s._v(" 需求分析")]),s._v(" "),a("p",[a("strong",[s._v("[需求]")])]),s._v(" "),a("ul",[a("li",[s._v("额度15000或自定义 ---\x3e 注册(信用卡)")]),s._v(" "),a("li",[s._v("支持多账户登录 ---\x3e 登录")]),s._v(" "),a("li",[s._v("实现购物商城, 买东西加入购物车, 调用信用卡接口结账. ---\x3e 购物")]),s._v(" "),a("li",[s._v("可以提现, 手续费5% ---\x3e 提现")]),s._v(" "),a("li",[s._v("支持账户间转账 ---\x3e 转账")]),s._v(" "),a("li",[s._v("记录日常消费流水 ---\x3e 记录流水 消费的每一笔会有个记录")]),s._v(" "),a("li",[s._v("提供还款接口 ---\x3e 还款接口")]),s._v(" "),a("li",[s._v("ATM记录操作日志 ---\x3e 日志")]),s._v(" "),a("li",[s._v("提供管理接口,包括添加用户、冻结账户等.. ---\x3e 添加,冻结账户")]),s._v(" "),a("li",[s._v("用户认证用装饰器 ---\x3e 装饰器")])]),s._v(" "),a("p",[a("strong",[s._v("[分析]")]),s._v(" 9个功能")]),s._v(" "),a("p",[s._v("注册、登录、查看余额、转账、取款、还款、查看流水、购物、查看购买商品")]),s._v(" "),a("hr"),s._v(" "),a("h6",{attrs:{id:"设计程序架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计程序架构"}},[s._v("#")]),s._v(" 设计程序架构！！！")]),s._v(" "),a("blockquote",[a("p",[s._v("core用户功能层 interface接口层 db数据处理层 log日志层 conf配置文件 lib公共方法文件")])]),s._v(" "),a("p",[a("img",{attrs:{src:n(392),alt:""}})]),s._v(" "),a("p",[s._v("巴拉巴拉.一顿操作写在一起..扩展性很差！(￣▽￣) 会被骂小菜鸡的.")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("用户功能层实现9大功能. 一般写的都是用户操作的代码...")])]),s._v(" "),a("li",[a("p",[s._v("接口层里面将用户功能层9大功能的接口设计分为了三个模块.(可以不分,分了逻辑更清晰.)")])]),s._v(" "),a("li",[a("p",[s._v("数据处理层设计了两个方法, 一个查,一个存.")])]),s._v(" "),a("li",[a("p",[s._v("公共方法层每一层都可以调用. eg: 时间格式转成字符串 每一层都可能会用的.")])]),s._v(" "),a("li",[a("p",[s._v("日志层 因为接口层主要是写逻辑的,所以在接口层加日志")])])]),s._v(" "),a("p",[a("strong",[s._v("数据流向")])]),s._v(" "),a("p",[s._v("以注册功能为例,用户输入了用户名和密码,数据流向了接口层user模块,接口层会连通数据处理层,先通过select判断用户是否存在,若不存在,再连通数据处理层,将准备好的用户信息调用save方法保存到文件中. 不管怎样,都会反馈信息给用户！！"),a("br"),s._v(" "),a("font",{attrs:{color:"blue"}},[s._v("注意哦！用户功能层不能直接调用数据处理层, 在架构设计的时候做了一个隔离")])],1),s._v(" "),a("p",[s._v("以登陆功能为例,用户输入了用户名和密码,调用登录的接口,登录的接口再调用select查询方法将查询结果返回给接口层,接口层进行一些判断,若成功,将返回True给用户功能层."),a("br"),s._v(" "),a("font",{attrs:{color:"blue"}},[s._v(" 将一个功能拆成了三个部分 以分层的形式来实现 ")])],1),s._v(" "),a("p",[a("strong",[s._v("牛B之处")])]),s._v(" "),a("ul",[a("li",[s._v("强行分为几层,每一层代码量减少."),a("strong",[s._v("逻辑变清晰了.")])]),s._v(" "),a("li",[s._v("程序解藕, "),a("strong",[s._v("可扩展性提高了")]),s._v(" . "),a("font",{attrs:{color:"blue"}},[s._v("高内聚低耦合")]),s._v(" "),a("ul",[a("li",[s._v("要实现网页版移动版,只需要改动用户功能层就行！其余架构层不用动！"),a("br"),s._v("\neg: 用户接口层 --- cmd版｜网页版｜移动版.")]),s._v(" "),a("li",[s._v("要用数据库代替文件,只需要改动数据处理层即可")])])],1)]),s._v(" "),a("hr"),s._v(" "),a("h6",{attrs:{id:"分任务开发程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分任务开发程序"}},[s._v("#")]),s._v(" 分任务开发程序")]),s._v(" "),a("p",[s._v("登录 - 注册 - 装饰器(某些功能需要登录后才能使用) - 查看余额 - 转账 - 还款 - 取款 -"),a("br"),s._v("\n查看流水 - 购物 - 查看购买商品 - 写一个获取日志的公共方法")]),s._v(" "),a("p",[a("strong",[s._v("断点调试！！")])]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("跟着视频敲了一遍,自己再独自敲一遍. "),a("strong",[s._v("为了偷懒")]),s._v(" ,不想新建工程目录.就利用os模块和shutil模块写了十几行代码完成了文件夹的迭代复制,以及.py文件的清空处理..."),a("font",{attrs:{color:"gray"}},[s._v("(详见,开胃小菜.md里的递归,目录操作)")])],1),s._v(" "),a("p",[s._v("第二遍一开始的时候,弄巧成拙写了个文件模块的相互调用...强行复习了一遍模块的导入与包..Hhhh...")]),s._v(" "),a("p",[s._v("在第二遍敲的过程中,**为了偷懒,**想自动添加函数到函数字典中,就写了一个没有wrapper的装饰器,与装饰器 auth_login登录验证一起作用时,出现了一点bug.. 在不断的摸索过程中知道了多个装饰器的工作原理..\n(过程并不是那么的愉快... 很头疼 但突然抓住某一个点就解释通了)")]),s._v(" "),a("p",[s._v("在第二遍敲的过程中,接口层的逻辑没有按部就班的按照视频代码的思路.. 感觉自己的逻辑判断思路更清晰明了..   Hhh些许自恋(´▽｀)   当然实现的效果是一样的. 先判断啥后判断啥"),a("strong",[s._v("个人习惯")]),s._v(" 因人而异吧.")]),s._v(" "),a("p",[s._v("确实这个架构挺牛批的,可以更好的理清思路... 明天开始面向对象之旅吧, Good night! world.")]),s._v(" "),a("hr"),s._v(" "),a("h6",{attrs:{id:"理清逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理清逻辑"}},[s._v("#")]),s._v(" 理清逻辑")]),s._v(" "),a("p",[s._v("学完面向对象我又回来啦.. 第三遍, 再敲一遍该项目.. 先是忙敲,结果事倍功半..."),a("br"),s._v("\n深刻体会到了一点: 在写之前要理清逻辑再搞!!! orz "),a("font",{attrs:{color:"gray"}},[s._v("(流下悔恨的眼泪)")])],1),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n准备阶段！\n"""')]),s._v("\n■ start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py 配置sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path、src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n■ setting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py 基本的初始配置"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("logging配置"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n■ src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py 用户操作\n\t先建好所有的功能函数 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 主要就是命名\n  完成run函数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 用户通过数字选择功能\n                实现"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("有参装饰器构建功能字典`@func_to_dic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    `func_dic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("choice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("`进行调用\n                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# func_dic、func_to_dic 写在 common.py公共文件里")]),s._v("\nPs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 体会下"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("循环中"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v("替代"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("中"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("的逻辑"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\nlogin_user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\nregister注册功能！\n    用户层 -- 逻辑层 -- 数据库层 （用户层与数据库层作了个“隔断”!）\n"""')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("已经登录"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("不能注册\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("输入账号名和密码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("两次密码不一致重新输入\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("调用register_interface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pwd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("接口 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注册需要写入文件,so要传递用户名和密码")]),s._v("\n  register_interface的逻辑"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 查询该用户是否已经被注册？ "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 已注册用户是以json文件的形式在db目录中存在")]),s._v("\n       `db_handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("select"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("`\n           这里简单粗暴的查看name对应的json文件是否存在"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("存在返回json文件反序列化后的user_dic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n       `db_handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("save"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_dic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("`\n           若不存在"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("则可以开始注册"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("即构建字典将用户信息"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name、pwd、lock等"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("以json文件的格式进行保存"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 注意"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("返还给 用户层"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("前端 的数据格式是 （flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("msg）\n       体会下flag在"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v("循环中的妙用!!\n\n"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\nlogin登录功能！\n"""')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("已经登录"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("不能登录\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("输入账号名和密码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("调用login_interface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pwd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("接口\n  login_interface的逻辑"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n     查找该用户是否存在"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("若存在比对密码是否一致"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("若密码一致且该用户未被锁定"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("登录成功"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("登录成功"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("写入全局的login_user字典中!\n\n"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\nlog_out退出登录功能！\n"""')]),s._v("\nPs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("写的代码有bug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("若一开始没任何人注册"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("选择log_out功能时"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("会让你先登录"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("可是没人注册"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("登录不了啊"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("哈哈哈哈"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("已经登录"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("才能退出登录"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" @auth_login 装饰器实现\n  "),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@auth_login")]),s._v(" 装饰器的逻辑"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    导入src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py模块"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("在真正执行退出登录功能之前先判断login_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("是否为空"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    若为空"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("需先调用src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("login"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("登录后"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("再跳转到退出登录功能界面!\n    Ps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("回顾两个知识点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      多装饰器执行顺序 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" !! 其实就是 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("wrapper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("log_out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("的区别罢了"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n      循环导入问题 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" !! 同一个模块只会在第一次导入时执行其内部代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("再次导入该模块时"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("即便是该模块尚未完全加载完毕也不会去重复执行内部代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("确认退出登录后"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("调用login_out_interface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("login_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("接口"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  注意"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("python是引用传递"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("login_user是可变类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("传递的是该字典的内存地址"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  login_out_interface的逻辑"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    直接将name键对应的值赋值为空字符串即可"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    \n\n其余功能"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("就是思维逻辑流程图的问题啦"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Hhh难得搞了"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("⁎⁍̴̛ᴗ⁍̴̛⁎"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br")])]),a("p",[s._v("第三遍加深了这些的理解 循环引用、多装饰器、json序列化与反序列化、python引用语义、流程判断continue、break的妙用、接口逻辑层返回前端/用户层 (flag,msg)的形式... 这5、6个小时血赚！真的,我哭死...(/ω＼)")]),s._v(" "),a("hr")])}),[],!1,null,null,null);t.default=r.exports},392:function(s,t,n){s.exports=n.p+"assets/img/architecture_diagram.5a9cbe0a.png"}}]);