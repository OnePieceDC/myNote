(window.webpackJsonp=window.webpackJsonp||[]).push([[229],{1172:function(t,s,n){"use strict";n.r(s);var a=n(0),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"操作系统"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[t._v("#")]),t._v(" 操作系统")]),t._v(" "),n("blockquote",[n("p",[t._v("详见 前面计算机基础中的操作系统章节.. 想要深入了解的话,推荐看《现代操作系统》,前三章足矣."),n("br"),t._v("\n参考链接: "),n("code",[t._v("https://www.cnblogs.com/linhaifeng/p/6295875.html")])])]),t._v(" "),n("p",[t._v("OS是位于计算机硬件与软件之间的控制程序.")]),t._v(" "),n("h3",{attrs:{id:"操作系统的功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作系统的功能"}},[t._v("#")]),t._v(" 操作系统的功能")]),t._v(" "),n("blockquote",[n("p",[t._v("操作系统位于计算机硬件与软件之间.. OS本身也是一个软件,它帮我们控制硬件;"),n("br"),t._v("\n它会将硬盘、cpu等如何运作的复杂操作封装成简单的接口给应用程序使用.. 起到一个承上启下的作用!")])]),t._v(" "),n("p",[n("strong",[t._v("第一大功能:")]),n("br"),t._v("\n       将硬件的复杂操作封装成简单的功能/接口,给应用程序使用.."),n("br"),t._v(" "),n("font",{attrs:{color:"gray"}},[t._v("最典型的代表: python中操作硬盘的文件处理程序!!")]),t._v(" "),n("strong",[t._v("第二大功能:")]),n("br"),t._v("\n        将多个应用程序对硬件("),n("font",{attrs:{color:"gray"}},[t._v("cpu、硬盘、网卡等")]),t._v(")的争抢变得有序化..\n        "),n("font",{attrs:{color:"gray"}},[t._v("对无序的争抢加以限制!!")])],1),t._v(" "),n("p",[n("font",{attrs:{color:"blue"}},[n("strong",[t._v("特别提醒:")]),n("br"),t._v("\nOS管理着这一套硬件;OS肩上扛着的多个应用程序是共享这套硬件的;OS决定它们给哪个应用程序用.")])],1),t._v(" "),n("h3",{attrs:{id:"操作系统的发展史"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作系统的发展史"}},[t._v("#")]),t._v(" 操作系统的发展史")]),t._v(" "),n("blockquote",[n("p",[t._v("先说一嘴,操作系统是如何从无到有发展到今儿这个状态的过程就是进程的演变过程!!"),n("br"),t._v("\n题外话: 人工智能就是人不断发觉自身的过程..")])]),t._v(" "),n("p",[n("font",{attrs:{color:"gray"}},[t._v("Ps:下述的操作系统发展史是从人类开始进入电子时代开始的.. 电子时代之前的算盘也算计算机Hhh.")])],1),t._v(" "),n("p",[t._v("第一代:真空管与穿孔卡片"),n("br"),t._v(" "),n("font",{attrs:{color:"gray"}},[t._v("无编程语言,无操作系统的概念")]),n("br"),t._v(" "),n("font",{attrs:{color:"red"}},[t._v('串行 -- 一个任务***"完完整整运行完后"***, 才能运行下一个任务!!')]),t._v(" "),n("strong",[t._v("特别强调完完整整!!")]),n("br"),t._v(" "),n("font",{attrs:{color:"blue"}},[t._v("任务一个个的运行不叫串行.因为多道技术基于单核下实现的并发,本质上也是一个个运行的..")])],1),t._v(" "),n("p",[t._v("第二代:晶体管和批处理系统"),n("br"),t._v(" "),n("font",{attrs:{color:"gray"}},[t._v("批处理系统,有进程那味道在里面啦! 尽管依旧是串行的.")])],1),t._v(" "),n("p",[t._v("第三代:集成电路芯片和多道程序设计"),n("br"),t._v(" "),n("font",{attrs:{color:"red"}},[t._v("并发 -- 多个任务看起来是同时运行的即可. 单核也可以实现并发!!")]),n("br"),t._v(" "),n("font",{attrs:{color:"red"}},[t._v("并行 -- 多个任务真正意义上的同时运行. 只有多核才能实现并行!!")]),n("br"),t._v("\n       提醒哈,CPU是用来计算的,CPU是无法执行IO操作的,一旦遇到IO操作,OS就会让CPU去执行别的任务的计算.")],1),t._v(" "),n("p",[n("font",{attrs:{color:"green"}},[n("strong",[t._v("多道技术的背景:")]),t._v(" 想要在单核下实现并发.(单核同一时刻只能执行一个任务) ")]),n("br"),t._v(" "),n("font",{attrs:{color:"red"}},[n("strong",[t._v("<任务并发实现> -- 切换 + 保存状态")])]),n("br"),t._v(" "),n("font",{attrs:{color:"gray"}},[t._v("保存状态意思是保存到内存,有部分关键数据可以保存到CPU的寄存器中.")])],1),t._v(" "),n("h3",{attrs:{id:"多道技术"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多道技术"}},[t._v("#")]),t._v(" 多道技术")]),t._v(" "),n("blockquote",[n("p",[t._v("多道技术有两大核心: 空间上的复用和时间上的复用."),n("br"),t._v(" "),n("font",{attrs:{color:"blue"}},[t._v("空间上的复用是为时间上的复用做铺垫的!!")])],1),t._v(" "),n("p",[n("font",{attrs:{color:"red"}},[n("strong",[t._v('一定要明确,是 "操作系统" 在使用多道技术!!')])])],1)]),t._v(" "),n("p",[n("font",{attrs:{color:"gray"}},[t._v("小声BB: 多道技术刚开始是没有解决内存物理层面的隔离的,问题解决后,多道技术才投入了使用..")])],1),t._v(" "),n("p",[n("font",{attrs:{color:"red"}},[t._v("空间上的复用: 多个 任务/进程 共同一个内存条, 但占用的内存是 "),n("strong",[t._v("相互隔离")]),t._v(" 的,并且是物理层面的隔离!!")]),n("br"),t._v(" "),n("font",{attrs:{color:"red"}},[t._v("时间上的复用: 多个 任务/进程 复用同一个cpu的时间!!")]),n("br"),t._v("\n     1> CPU遇到IO切换: "),n("font",{attrs:{color:"brown"}},[t._v("可以提高效率!  ")]),n("br"),t._v("\n     2> 一个任务占用CPU时间过长也会切走: "),n("font",{attrs:{color:"brown"}},[t._v("为了实现并发效果不得已而为之,反而会降低程序的执行效率.  ")]),n("br"),t._v("\n     3> 优先级高的任务也能抢走CPU的执行权限.")],1),t._v(" "),n("p",[n("font",{attrs:{color:"green"}},[t._v("CPU角度 -- 在多个任务直接来回快速切换.")]),n("br"),t._v(" "),n("font",{attrs:{color:"green"}},[t._v("任务角度 -- 在这个 "),n("strong",[t._v("CPU时间片")]),t._v(" 里具有对CPU的使用权限.")])],1),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("Ps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("没有说多核cpu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("那么提到多道技术"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("就是 单核"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("多道 实现多个任务的并发执行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\nQ1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("有三个任务A B C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("先依次加载到内存中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  它们需要cpu运算的时间都是1s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("运算完后产生的数据需要放到硬盘里"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("硬盘IO时间都是9s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  使用多道技术"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("完成这"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("个任务需要多长时间?"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Ps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("cpu在三个任务之间切换的时间忽略不计"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nA1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 12s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\t\n  想通关键的一点在于"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("在做任务C的IO时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("任务A和B的IO也在做"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("当任务C的IO做完时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("AB的IO早就做完了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  \n  \nQ2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("若任务ABC都只有运算时间10s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("都没有IO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 这种情况下"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("并发真的比串行效率高吗?\nA2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("串行30s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("并行是大于30s的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("因为还要考虑cpu切换进程的时间"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n   即cpu在没有遇到IO的情况下切换"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("不会切换效率"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("反而会降低效率"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n   但真实情况下"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("还是得切"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("因为得实现并发"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("不能让CPU被单个任务捆绑过长的时间"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  \n  \nQ3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("若CPU有四个核"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("OS应用多道技术"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("个任务在"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("个核ABCD上来回切换的过程是怎样的?\nA3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("个任务①②③④⑤交给OS进行调度"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("个核"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("每个核都先接一个任务"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n      A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("①  B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("②  C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("③  D"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("④    ⑤在一旁等着\n   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 任务①遇到了IO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("被核A踢到一旁待着"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n      A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("⑤  B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("②  C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("③  D"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("④    ①在一旁处理IO\n   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 任务①的IO处理完毕了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("任务③遇到了IO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("被核A踢到一旁待着"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n      A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("⑤  B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("②  C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("①  D"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("④    ③在一旁处理IO\n   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 以此类推"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br")])]),n("hr"),t._v(" "),n("h2",{attrs:{id:"进程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[t._v("#")]),t._v(" 进程")]),t._v(" "),n("blockquote",[n("p",[t._v("进程起源于操作系统,是操作系统最最核心的概念,没有之一."),n("br"),t._v("\n操作系统所有其它概念都是围绕着进程展开的!!")])]),t._v(" "),n("p",[n("font",{attrs:{color:"green"}},[t._v("特别提醒: 上方操作系统小节中提到的任务都可以看作是一个进程!!")])],1),t._v(" "),n("h3",{attrs:{id:"概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),n("blockquote",[n("p",[n("font",{attrs:{color:"red"}},[t._v("进程指的是一个正在运行的程序,或者是程序的运行过程.")])],1)]),t._v(" "),n("p",[n("font",{attrs:{color:"blue"}},[t._v("硬盘里躺着的那堆代码叫做程序, 程序代码从硬盘加载到内存,CPU再取程序的代码执行,这一过程叫做进程.")]),n("br"),t._v("\n进程不是真实存在的,它是一系列动作的总和, "),n("strong",[t._v("是一个抽象的概念!")]),n("br"),t._v(" "),n("font",{attrs:{color:"gray"}},[t._v("eg: 做蛋糕,(CPU)需要先阅读食谱(指令),取各种原材料(输入数据)等..")]),n("br"),t._v(" "),n("font",{attrs:{color:"brown"}},[t._v("Ps: "),n("strong",[t._v("特别注意,")]),t._v(" 这些动作(CPU)不会主动去做.. 但凡硬件(CPU、硬盘、网卡等)要动起来,都是OS在调度!!")])],1),t._v(" "),n("h3",{attrs:{id:"进程的创建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进程的创建"}},[t._v("#")]),t._v(" 进程的创建")]),t._v(" "),n("blockquote",[n("p",[t._v("一共有4种方式,前三种都 "),n("strong",[t._v('"与我无瓜"')]),t._v(" ,第4种才是我们要关注的!!")])]),t._v(" "),n("p",[t._v("1> 系统初始化时创建的进程"),n("br"),t._v("\n2> 用户交互式的请求创建的进程 "),n("font",{attrs:{color:"gray"}},[t._v("eg:双击QQ软件")]),n("br"),t._v("\n3> 批处理作业的初始化 "),n("font",{attrs:{color:"gray"}},[t._v("串行执行的")]),n("br"),t._v(" "),n("font",{attrs:{color:"red"}},[t._v("4> 一个进程在运行过程中开启了子进程")]),t._v(" "),n("font",{attrs:{color:"gray"}},[t._v("(其实这样表述有点重复了,说到进程肯定是在运行的...咬文爵字Hhh)")])],1),t._v(" "),n("p",[t._v("并发编程里多进程部分的研究要点就是: 一个进程里开启多个进程."),n("br"),t._v(" "),n("font",{attrs:{color:"red"}},[t._v("在一个正在运行的父进程里开启子进程是为了将原本在父进程里串行执行的任务拿到子进程里面执行,使父进程里的多个任务达到并发执行的效果..")])],1),t._v(" "),n("p",[n("strong",[t._v("再次重申!起进程的请求是给OS的..")]),t._v(" OS分为了两派,它们的处理略有不同:"),n("br"),t._v(" "),n("font",{attrs:{color:"brown"}},[t._v("发给windows: 调用OS中名为 "),n("strong",[t._v("creatprocess")]),t._v(" 的接口 ")]),n("br"),t._v(" "),n("font",{attrs:{color:"brown"}},[t._v("发给linux: 调用OS中名为 "),n("strong",[t._v("fork")]),t._v(" 的接口")]),t._v("\n△ "),n("font",{attrs:{color:"blue"}},[t._v("相同点")]),t._v(" -- 收到开启子进程的请求,都会新开辟一块空间,放要执行任务的代码,不仅如此,父进程还会copy一份自个儿的namespace命名空间放到子进程的空间里,当作子进程运行时的全局变量.."),n("br"),t._v("\n△ "),n("font",{attrs:{color:"blue"}},[t._v("不同点")]),t._v(" -- 父进程copy的数据略有区别.  影响不大!"),n("br"),t._v("\n        windows: 子进程初始状态跟父进程不是一模一样的,"),n("font",{attrs:{color:"gray"}},[t._v("实现进程相关的数据不一样.")]),n("br"),t._v("\n        linux: 子进程内存空间的初始状态跟父进程一模一样!!"),n("br"),t._v(" "),n("font",{attrs:{color:"brown"}},[t._v("注意一点,子进程与父进程从运行角度来看是两个完全独立的执行单位!! 这意味着它俩的物理内存相互隔离,虽然初始状态一样(不用管什么OS啦,简单认为就是副本),但后期执行代码导致的改动,互不影响!!")])],1),t._v(" "),n("h3",{attrs:{id:"进程的状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进程的状态"}},[t._v("#")]),t._v(" 进程的状态")]),t._v(" "),n("blockquote",[n("p",[t._v("运行、阻塞、就绪         详见前面计算机基础中的操作系统章节!!")])]),t._v(" "),n("p",[n("code",[t._v("tail -f access.log |grep '404'")]),n("br"),t._v("\n执行程序 tail 开启一个子进程, 执行程序grep开启另外一个子进程."),n("br"),t._v("\n两个进程之间基于管道'|'通讯, 将tail的结果作为grep的输入."),n("br"),t._v("\n进程grep在等待输入(即I/O)时的状态称为阻塞, 此时grep命令都无法运行!!")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("如何提升任务执行的效率呢？\nA"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("理想情况"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cpu一直被此任务占用"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("任务的IO操作完成后"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("立马能得到CPU的使用"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  但这是不现实的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("操作系统不允许cpu资源这样浪费"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n  我们唯一能控制的就是阻塞"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  我们只能在写程序以及部署集群架构的过程中减少任务处于阻塞态的时间"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("增加任务处于就绪态的时间\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("任务处于阻塞态"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("给它cpu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("它也不中用啊"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n这样的话"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("处于就绪态的任务一旦得到cpu就会直接开始运行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("任务整体的执行效率就提高了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[n("font",{attrs:{color:"blue"}},[t._v("Ps: py中的I/O操作,文件处理中的open不是, write、read等读写操作是!! time.sleep不是,但可以模拟I/O效果.")])],1),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("进程并发的实现在于,硬件中断一个正在运行的进程, 把此时进程运行的所有状态保存下来, 为此, 操作系统维护一张表格, 即进程表 (process table) , 每个进程占用一个进程表项 (这些表项也称为进程控制块).."),n("br"),t._v(" "),n("font",{attrs:{color:"yellow"}},[t._v("了解即可..Hhhh")])],1),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("进程管理"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("存储管理"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("文件管理"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n寄存器                        正文段指针                    根目录\n程序计数器                     数据段指针                    工作目录\n程序状态字                     堆栈指针                     文件描述符\n堆栈指针                                                   用户ID\n进程状态                                                   组ID\n优先级\n调度参数\n进程ID\n父进程\n进程组\n信号\n进程开始时间\n使用的CPU时间\n子进程的CPU时间\n下次报警时间 \n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("p",[n("strong",[t._v("☆ 进程的同步\\异步and阻塞\\非阻塞 很重要. 在后面的代码编程过程中会逐一进行阐述.(´▽｀)")])]),t._v(" "),n("hr")])}),[],!1,null,null,null);s.default=r.exports}}]);