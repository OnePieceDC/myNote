(window.webpackJsonp=window.webpackJsonp||[]).push([[228],{1166:function(t,s,a){"use strict";a.r(s);var r=a(0),n=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("font",{attrs:{color:"green"}},[t._v('此小节为回顾(总结开发必知必会的网络知识), 详细的细节请看"计算机基础"的内容.')])],1),t._v(" "),a("h2",{attrs:{id:"c-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-s"}},[t._v("#")]),t._v(" C/S")]),t._v(" "),a("p",[t._v("C client客户端 与 S server服务端 基于网络进行通信."),a("br"),t._v(" "),a("font",{attrs:{color:"gray"}},[t._v("B/S 包含于 C/S.     "),a("strong",[t._v("B指的是browser浏览器")]),t._v(", 以浏览器作为客户端.")])],1),t._v(" "),a("p",[a("font",{attrs:{color:"blue"}},[t._v("server端必须满足的两个条件:")]),a("br"),t._v("\n1> 保证一套体系(网络 - 硬件 - OS - server的应用软件)的稳定运行"),a("br"),t._v(" "),a("font",{attrs:{color:"gray"}},[t._v("开发人员关注与服务端的应用软件即可,网络、硬件、Linux是运维负责的.")]),a("br"),t._v("\n2> 服务端必须绑定一个固定的地址.(IP + 端口)")],1),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"互联网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#互联网"}},[t._v("#")]),t._v(" 互联网")]),t._v(" "),a("blockquote",[a("p",[t._v("互联网 = 物理连接介质 + 互联网协议")])]),t._v(" "),a("p",[a("font",{attrs:{color:"gray"}},[t._v("Ps: 物理连接介质(光纤、电缆、交换机、路由器..)是网络运维管的.. "),a("strong",[t._v("我们关注的是协议!!")])])],1),t._v(" "),a("p",[a("font",{attrs:{color:"brown"}},[t._v('"互联网协议即计算机界的英语"')]),a("font",{attrs:{color:"gray"}},[t._v("(全世界的通用语言是英语)")]),a("br"),t._v("\n所有的计算机都得学会互联网协议,才能按照协议规定的标准组织数据沿着网络进行通信.")],1),t._v(" "),a("p",[t._v("OSI组织根据互联网协议功能的不同,将其分为了七层: "),a("strong",[t._v("应表会传网数物")])]),t._v(" "),a("p",[t._v("但作为开发人员,只需要掌握五层: "),a("font",{attrs:{color:"brown"}},[t._v("应 - 传 - 网 - 数 - 物")])],1),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("协议")]),t._v(" "),a("th",[t._v("五层")]),t._v(" "),a("th",[t._v("标识地址的方式")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("HTTP、FTP、Email")]),t._v(" "),a("td",[t._v("应")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("TCP、UDP")]),t._v(" "),a("td",[t._v("传")]),t._v(" "),a("td",[t._v("ip + mac + port")])]),t._v(" "),a("tr",[a("td",[t._v("IP")]),t._v(" "),a("td",[t._v("网")]),t._v(" "),a("td",[t._v("ip + mac")])]),t._v(" "),a("tr",[a("td",[t._v("ethernet、arp")]),t._v(" "),a("td",[t._v("数")]),t._v(" "),a("td",[t._v("mac")])]),t._v(" "),a("tr",[a("td",[t._v("高低电信号")]),t._v(" "),a("td",[t._v("物")]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"ethernet协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ethernet协议"}},[t._v("#")]),t._v(" Ethernet协议")]),t._v(" "),a("blockquote",[a("p",[t._v("以太网协议有三大规定:")])]),t._v(" "),a("p",[t._v("1> 规定一组电信号构成一个数据帧"),a("br"),t._v("\n2> 每一 "),a("font",{attrs:{color:"brown"}},[t._v("数据帧")]),t._v(" 由报头head "),a("font",{attrs:{color:"blue"}},[t._v('"固定长度18个字节"')]),t._v(" + 数据data两部分组成")],1),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("源"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mac"')]),t._v("地址  目标"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mac"')]),t._v("地址  数据类型      DATA\n   6bit         6bit       6bit     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("46")]),t._v("-1500bit\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("3> 规定接入的internet的设备都必须具备网卡,每块网卡上在出厂的时候都烧录了全世界唯一的mac地址."),a("br"),t._v(" "),a("font",{attrs:{color:"gray"}},[t._v("mac地址 48位二进制是,由16位十六进制数表示,前6位厂商编号,后六位流水线号. ")])],1),t._v(" "),a("p",[a("strong",[t._v("思考?")]),t._v(" 有了以太网协议和物理连接介质,就能实现全世界计算机之间的通信了吗？"),a("br"),t._v("\n嗯! 理论上ok的. 但要知道"),a("font",{attrs:{color:"brown"}},[t._v("以太网协议采用一种古老的方式通信: "),a("strong",[t._v("广播.")])]),a("br"),t._v(" "),a("font",{attrs:{color:"gray"}},[t._v("有这样一句谚语: 计算机通信基本靠吼")]),a("br"),t._v("\n真实情况下是不行的! 从两方面考虑:"),a("br"),t._v("\n     一方面,产生大量的广播包 ("),a("font",{attrs:{color:"gray"}},[t._v("就是数据帧,里面会有源mac地址和目标mac")]),t._v(") 会造成网络风暴;"),a("br"),t._v("\n     二方面,交换机的 "),a("strong",[t._v("mac地址表")]),t._v(" ("),a("font",{attrs:{color:"gray"}},[t._v("mac地址与交换机端口的映射")]),t._v(") 不可能无限大."),a("br"),t._v(" "),a("font",{attrs:{color:"green"}},[t._v("交换机具备mac地址学习功能!")])],1),t._v(" "),a("p",[t._v('"吼"只能在当前所处的 局域网/子网/网段/广播域 中吼! '),a("font",{attrs:{color:"blue"}},[t._v("以太网协议的mac地址是走不出广播域的!!")]),a("br"),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("mac地址能标识一台主机在局域网中的哪个位置.")])],1),t._v(" "),a("h3",{attrs:{id:"ip协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip协议"}},[t._v("#")]),t._v(" IP协议")]),t._v(" "),a("blockquote",[a("p",[t._v("IP协议有二大规定:")])]),t._v(" "),a("p",[t._v("1> 规定每台计算机都得配一个IP地址 "),a("font",{attrs:{color:"gray"}},[t._v("(现目前是IPv4地址) ")]),a("br"),t._v("\n     IPv4地址遵照点分十进制组成,有四段,每段都是8位二进制数,换成十进制数,每段的范围都是0-255."),a("br"),t._v("\n2> 规定发送的 "),a("font",{attrs:{color:"brown"}},[t._v("数据报")]),t._v(" 由报头和数据两部分组成.     报头包含 "),a("strong",[t._v("源IP地址")]),t._v(" 和 "),a("strong",[t._v("目标IP地址")]),t._v("!")],1),t._v(" "),a("p",[a("font",{attrs:{color:"blue"}},[t._v("IP地址和子网掩码作按位与运算,可以得到子网地址/网络地址!")]),a("br"),t._v(" "),a("strong",[t._v("若通信双方的主机的网络地址相同,")]),t._v(" 则用以太网协议,基于mac地址通过数据链路层的二层交换机进行广播."),a("br"),t._v("\n若不相同,则需要跨局域网通信,涉及到路由协议(会有一个路由表)等.. 了解即可,无需掌握."),a("br"),t._v(" "),a("font",{attrs:{color:"gray"}},[t._v('Ps: 不在同一局域网,会将数据包交给网关,数据包中"封装的目标mac是mac(网关)"')])],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("IP + mac地址能标识全世界范围内独一无二的一台计算机.")]),t._v("  有时候只说IP是因为ARP在背后找到了MAC."),a("br"),t._v(" "),a("font",{attrs:{color:"brown"}},[t._v("IP找到主机在哪个局域网,MAC找到主机在局域网的哪个位置!!")])],1),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("我们判断双方能否能成功通信"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("会ping对方的IP地址"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 但这并不意味着"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("只需要IP地址就行啦! \n找到对方处于哪个局域网后"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ARP协议会发送 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ARP广播包"')]),t._v(" 帮我们拿到此局域网里该IP对应的mac地址!!!\n\n拿到目标mac后"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("再开始封装以太网协议的报头"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("发送真正的数据!\n\n基于网络层和数据链路层如何进行通信的？细节请看 计算机网络之网络层 的内容"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("开发了解即可"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n内心OS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("当时弄明白的过程也挺痛苦的"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Hhh 想着以后计算机考研"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("408")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("会考计算机网络"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("也就舒坦了些许"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("先了解嘛!\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"tcp-udp协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-udp协议"}},[t._v("#")]),t._v(" TCP/UDP协议")]),t._v(" "),a("blockquote",[a("p",[t._v("客户端软件与服务端软件通信,C找到S在哪还不够,还得找到S上运行的多个软件中的那一个!!")])]),t._v(" "),a("p",[t._v("TCP和UDP是基于端口工作的协议"),a("br"),t._v(" "),a("font",{attrs:{color:"blue"}},[t._v("服务端每启动一个基于互联网通信的程序,都会对应一个本主机唯一的端口号! ")]),a("br"),t._v("\n端口号范围: "),a("strong",[t._v("0 - 65535")]),t._v(" "),a("font",{attrs:{color:"gray"}},[t._v("0 - 1024 给操作系统预留的, 1025 - 65535给软件的.")])],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("IP + mac + port 能标识全世界范围内独一无二的一个基于网络通信的应用软件!! ")]),a("br"),t._v(" "),a("font",{attrs:{color:"gray"}},[t._v("因为ARP协议的存在,通常会说是 IP + port.")])],1),t._v(" "),a("p",[t._v("C/S都需要IP和port, 但"),a("font",{attrs:{color:"blue"}},[t._v("服务端的IP和port需要固定!")]),t._v("("),a("font",{attrs:{color:"gray"}},[t._v("哪怕宕机后重启也不能变!")]),t._v("),客户端不需要固定.")],1),t._v(" "),a("h3",{attrs:{id:"http协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http协议"}},[t._v("#")]),t._v(" HTTP协议")]),t._v(" "),a("blockquote",[a("p",[t._v("应用软件工作在应用层, "),a("font",{attrs:{color:"brown"}},[t._v("自己写的应用软件可以自个儿定制应用层的协议!")]),a("br"),t._v("\n比如: 浏览器这个应用软件就执行了http协议和tcp协议..")],1)]),t._v(" "),a("p",[t._v("要知道, 通信最根本的目的是拿到整个互联网里想要访问的那个资源!!"),a("br"),t._v("\n上网的过程本质就是资源下载和上传的过程!")]),t._v(" "),a("p",[a("font",{attrs:{color:"brown"}},[a("strong",[t._v("url")]),t._v(" 统一资源定位符号 ")]),a("br"),t._v(" "),a("font",{attrs:{color:"blue"}},[t._v("url = 应用协议部分 + 域名和端口 + 路径")])],1),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zhihu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("column"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("c_1189883314197168128\n\n应用协议部分      https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -- 也有可能是htp://")]),t._v("\n域名和端口        www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zhihu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -- 默认端口号是80,浏览器后自动填充.")]),t._v("\n路径             column"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("c_1189883314197168128\n\n注意"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("是服务端的端口号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("基于网络通信的web服务"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("提供网页服务的"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("都是绑定"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("端口"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 约定俗成的"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n常见默认端口"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DHCP端口号"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("67")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" DNS端口号"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[a("font",{attrs:{color:"red"}},[t._v("url地址是用来标识全世界范围内独一无二的一个资源的!! ")]),a("br"),t._v(" "),a("font",{attrs:{color:"gray"}},[t._v("将url地址拆分,可以发现,url是建立在ip+mac+port之上的!")])],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[a("strong",[t._v("[浏览器打开一篇博客的过程!!]")])]),a("br"),t._v("\n        浏览器和用户进行交互 "),a("font",{attrs:{color:"gray"}},[t._v('"用户点击某个链接"')]),t._v(" , 产生了一个url地址. 浏览器不着急发送请求."),a("br"),t._v("\n        会先做一些准备工作:"),a("br"),t._v("\n             1> 将url中的域名发给DNS服务器进行 "),a("strong",[t._v("DNS域名解析")]),t._v(" , 得到IP地址."),a("br"),t._v("\n             2> 拿着IP和端口,浏览器基于TCP协议发送接收数据包与目标主机上的应用软件完成三次握手!!"),a("br"),t._v(" "),a("font",{attrs:{color:"blue"}},[t._v("注意,三次握手的过程中传输的数据包不包含用户真正要传输的数据;")]),a("br"),t._v(" "),a("font",{attrs:{color:"blue"}},[a("strong",[t._v("即此时没有真正的数据在传输")]),t._v(" ,TCP 三次握手建立的 "),a("strong",[t._v("双向通路")]),t._v(" 是在为传输数据做准备!!!")]),a("br"),t._v("\n        此双向通道是逻辑上的! 建立好后, "),a("strong",[t._v("浏览器会先按照自己定义的HTTP协议封装数据")]),t._v(" , "),a("strong",[t._v("将数据给操作系统")]),t._v(" .操作系统再依次 "),a("strong",[t._v("封装")]),t._v(" tcp头、ip头、以太网头,最后调用网卡通过物理连接介质进行传输.. 目标主机收到后,进行 "),a("strong",[t._v("拆包")]),t._v(". 再封装浏览器需要的数据传输给浏览器.")],1),t._v(" "),a("p",[a("font",{attrs:{color:"green"}},[t._v('Q: 为啥要先建立双向通路"本质上就是 全双工通信"?')]),a("br"),t._v("\nA: HTTP是比TCP更高层次的应用层协议. 根据规则,只有低层协议建立之后才能,才能进行更层协议的连接."),a("br"),t._v("\n    因此, 首先要建立TCP连接, 一般TCP连接的端口号是80..."),a("br"),t._v("\n    此双向通路还可以解决丢包问题、顺序问题、效率问题等.")],1),t._v(" "),a("p",[a("font",{attrs:{color:"green"}},[t._v("Q: 应用层什么时候就认为把数据发完了? ")]),a("br"),t._v("\nA: 应用层将数据丢给OS的时候, 应用层就不管啦!OS再按照协议开始运作."),a("br"),t._v(" "),a("font",{attrs:{color:"brown"}},[t._v("So,要注意,应用层send操作发数据的时候,不是直接发给对方啦,而是先把数据给了OS!!")])],1),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"三次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[t._v("#")]),t._v(" 三次握手")]),t._v(" "),a("blockquote",[a("p",[t._v("三次握手建立TCP连接.     准确点说是 "),a("font",{attrs:{color:"brown"}},[t._v("一次握手过程中交换了三个报文!!")]),a("br"),t._v("\n一定要晓得在发送真正数据之前,双向通路是没有建好的!!!")],1)]),t._v(" "),a("p",[t._v("TCP协议是好人协议, Client向Server发送连接请求, S同意啦! 最后C再向S发送一个确认.")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SYN=1   请求报文 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ACK=1   确认报文")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# seq=x   序列号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ack=x+1 确认号,表明x序号以前的都收到啦,期望下一次收到的序号是x+1")]),t._v("\n\n第一个报文   "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("C to S"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("SYN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("x \n第二个报文   "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("S to C"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ACK")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ack")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("x+1\n    - - - - - - - -\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("SYN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("y\n第三个报文   "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("C to S"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ACK")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("x+1   ack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[a("font",{attrs:{color:"brown"}},[a("strong",[t._v("[半连接池 backlog]")])])],1),t._v(" "),a("p",[t._v("服务器第一次收到客户端的 "),a("code",[t._v("SYN")]),t._v(" 之后, 就会处于 "),a("code",[t._v("SYN_RCVD")]),t._v(" 状态, 此时双方还没有完全建立连接."),a("br"),t._v("\n服务器会把这种状态下 "),a("strong",[t._v("请求连接")]),t._v(" 放在一个队列里, 我们把这种队列称之为半连接队列."),a("br"),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("半连接池限制的是同一时间的请求数,而非连接数.")]),t._v("  半连接池的大小为5,已连接数可以为100."),a("br"),t._v(" "),a("font",{attrs:{color:"brown"}},[t._v("syn洪水攻击就会造成服务器大量SYN_RCVD状态出现..")])],1),t._v(" "),a("p",[t._v("当然还有一个全连接队列, 就是已经完成三次握手, "),a("strong",[t._v("建立好的连接")]),t._v(" 就会放在全连接队列中."),a("br"),t._v("\n如果队列满了就有可能会出现丢包现象.")]),t._v(" "),a("p",[a("font",{attrs:{color:"brown"}},[a("strong",[t._v("[三次的原因]?")])])],1),t._v(" "),a("p",[t._v("1> 通信双方确认彼此的收发数据的能力正常."),a("br"),t._v("\n2> 只交换两次报文的话,服务端不能保证客户端已经收到了初始序列号.. 若第二个报文丢失, 客户端不晓得服务端的初始序列号, TCP的可靠性就无从谈起."),a("br"),t._v("\n3> 若只交换两次报文. B一旦收到A的连接请求,回包后就表明连接已经建立啦."),a("br"),t._v("\n当A给B的连接请求因为网络原因延迟了,A又重新发了连接请求,在AB连接断开后,旧的那个连接请求到达了B,AB之间又建立了连接.. B会苦苦等待A发数据过来."),a("br"),t._v("\n4> 不是四次是因为,第二次的报文是没有传输真正的数据的,ACK+SNK一起传啦."),a("br"),t._v(" "),a("font",{attrs:{color:"gray"}},[t._v("Ps: 第一个第二个报文不能携带真的数据,第三个报文是可以携带真正的数据的,因为客户端已经知道服务端的收发能力正常. 若第一个报文可以携带数据,那么攻击者就可以发送大量的报文让服务器占用大量内存进行缓存..")])],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[a("strong",[t._v("[TCP协议如何保证可靠传输!!!!!!]?")])])],1),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{color:"brown"}},[t._v("详见: "),a("code",[t._v("https://blog.csdn.net/summer_fish/article/details/125259025")])])],1)]),t._v(" "),a("p",[t._v("1> 字节编号机制!!"),a("br"),t._v("\n2> 数据段的确认机制!!"),a("br"),t._v("\n3> TCP超时重传机制!!")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[t._v("#")]),t._v(" 四次挥手")]),t._v(" "),a("blockquote",[a("p",[t._v("四报文握手 断开连接")])]),t._v(" "),a("p",[t._v("为什么是四次？想象一下建立好的TCP连接是双向的公路!")]),t._v(" "),a("p",[t._v("通常是服务端先发起断开连接的请求,进入 FIN_WAIT_1的状态."),a("br"),t._v("\n在大并发的情况下,服务端会主动断开连接.会快速经过FIN_WAIT_1、FIN_WAIT_2,瞬间走到TIME_WAIT状态."),a("br"),t._v(" "),a("font",{attrs:{color:"brown"}},[t._v("So,服务端大量连接处于TIME_WAIT状态,则证明有大量的访问!!")])],1),t._v(" "),a("p",[t._v("其余的请看 计算机网络之传输层 的内容!!")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[t._v("面试常问:")]),a("br"),t._v("\n1> 为何建立连接需要三次, 断开连接需要四次?"),a("br"),t._v("\n2> 为什么TCP协议是可靠协议,UDP是不可靠协议？"),a("br"),t._v("\n     可靠与不可靠不关乎有无连接建立. TCP传输数据的可靠在于它发数据后必须等对方确认后才会把这份数据从自己的 内存中/发送队列中 删除掉.若未得到确认,会重传. -- TCP超时重传机制."),a("br"),t._v("\n     UDP把数据发出去后,就立刻清除掉,根本不考虑对方是否已经收到. --- 效率高,但不可靠.数据不安全."),a("br"),t._v("\n3> tcp协议建立连接与断开连接的状态信息以及表示的意义."),a("br"),t._v(" "),a("font",{attrs:{color:"blue"}},[t._v("正常情况下,只会补捉到LISTEN、ESTABLISHED、TIME_WAIT状态.. 其余状态会很快很快.")])],1),t._v(" "),a("hr")])}),[],!1,null,null,null);s.default=n.exports}}]);