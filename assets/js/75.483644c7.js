(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{1184:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"知识储备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#知识储备"}},[s._v("#")]),s._v(" 知识储备")]),s._v(" "),n("h5",{attrs:{id:"拦截点号运算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#拦截点号运算"}},[s._v("#")]),s._v(" 拦截点号运算")]),s._v(" "),n("p",[n("code",[s._v("__setattr__()")]),s._v(":"),n("br"),s._v("\n        在对类实例化对象的属性进行 赋值/修改 "),n("code",[s._v("实例.属性=值")]),s._v(" 时,首先会调用该方法"),n("br"),s._v("\n        并在该方法中将属性名和属性值添加到实例的 "),n("code",[s._v("__dict__")]),s._v(" 属性中"),n("br"),s._v(" "),n("code",[s._v("__getattr__():")]),n("br"),s._v("\n        实例引用属性 "),n("code",[s._v("实例.属性")]),s._v(" 时,按照正常的规则进行属性查找, "),n("font",{attrs:{color:"brown"}},[s._v("没找到时的兜底函数.")]),n("br"),s._v(" "),n("font",{attrs:{color:"gray"}},[s._v("Ps: 类的属性引用和赋值稍微实验了下,有些许不同,不想深究啦,遇到了再说.")]),n("br"),s._v(" "),n("font",{attrs:{color:"gray"}},[s._v("目前,可以确定一点,类在调用自身属性的时候, 是不会触发"),n("code",[s._v("__getattribute__")]),s._v("方法")])],1),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__setattr__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__dict__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__getattr__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("raise")]),s._v(" AttributeError"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'%s' object has no attribute '%s'\"")]),s._v(" \\\n                             "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__class__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__name__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\nf "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dc'")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 赋值操作直接调用__setattr__")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("setattr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'age'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 同上")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0 18 dc")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("getattr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("getattr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# None -- xxx在f中没有,在Foo中也没有,调用__getattr__")]),s._v("\n                                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         只不过,调用__getattr__得到error后,会自动处理返回None")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xxx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 同上 按照属性查找顺序没找到,会调用__getattr__,报错")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__dict__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {'name': 'dc', 'age': 18}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h5",{attrs:{id:"元类的复习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#元类的复习"}},[s._v("#")]),s._v(" 元类的复习")]),s._v(" "),n("blockquote",[n("p",[s._v("metaclass元类对类的操作一般都会在元类new方法里实现"),n("br"),s._v("\n注意理解这一句话:"),n("br"),s._v(" "),n("font",{attrs:{color:"red"}},[s._v("在"),n("code",[s._v("__init__")]),s._v(" 的时候, 类已经被创建了, 在元类的 "),n("code",[s._v("__init__")]),s._v(" 方法中对类的命名空间的修改操作并不会生效.")])],1)]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- type的伪代码!")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__call__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("kwargs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__new__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("kwargs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__init__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("kwargs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" obj\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("font",{attrs:{color:"brown"}},[s._v("需求:")]),s._v(" 在自定义元类Mymeta中把自定义类People的数据属性都变成大写"),n("br"),s._v(" "),n("font",{attrs:{color:"brown"}},[s._v("解决方案:")]),s._v(" 在 "),n("code",[s._v("__new__")]),s._v("中对未实例化的类进行修改")],1),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Mymeta")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__new__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mcs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bases"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        update_dic "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("items"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 数据属性不可被调用且不以双下划线开头")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("callable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("startswith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                update_dic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("upper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" v\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                update_dic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" v\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__new__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mcs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bases"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" update_dic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      \n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bases"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 可以看到在__new__中创建对象时,修改了attrs,但__init__收到的是修改前的.")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    这可以使用type的伪代码来解释!")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {'__module__': '__main__', '__qualname__': 'People', 'country': 'china'}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__init__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bases"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        \n        \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("People")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" metaclass"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Mymeta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    country "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"china"')]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    p "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" People"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__dict__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("hasattr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("People"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'country'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# False")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("hasattr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("People"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'COUNTRY'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# True")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("getattr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"COUNTRY"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# china")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("p",[n("font",{attrs:{color:"green"}},[s._v("一点小想法:")]),n("br"),s._v("\n曲线救国, 在 "),n("code",[s._v("__init__")]),s._v(" 中, 给People类的命名空间添加大写的数据属性, "),n("font",{attrs:{color:"blue"}},[s._v("但小写的数据属性依然存在..")])],1),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" copy "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" deepcopy\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Mymeta")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bases"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 单个下划线是一个Python命名约定,表示这个名称是供内部使用的")]),s._v("\n        _attrs "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" deepcopy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 用_attrs,是因为在循环体里会对attrs进行改变")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" _attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("items"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("callable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("startswith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n                super(Mymeta, cls).__setattr__(k.upper(), v)  -- 可以得到正确结果,很神奇.\n                那么上面这个super().__setattr__()语句又等同于什么？想了想.不深究了.\n                \n                错误的实践\n                attrs[k.upper()] = v  # -- 不会在People的__dict__中生效\n                cls.__setattr__(k.upper(), v)  # -- 报错\n                cls.__dict__[k.upper()] = v  # -- 报错\n                \n                但知道了 实例使用反射setattr会调用__setattr__,但类使用反射setattr不会..\n                (在拦截点号运算中打断点实践出来的!)\n                \n                累了,记住一点就好,对类的操作在元类的__new__中实现!(つД`)ノ 我直接反手一个躺平.\n                """')]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("setattr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("upper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 用反射就会生效 给People类添加属性")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 即type里的__init__不会对attrs有任何的操作!!")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__init__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bases"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("People")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" metaclass"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Mymeta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    country "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"china"')]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    p "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" People"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__dict__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("hasattr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("People"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'country'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# True")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("hasattr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("People"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'COUNTRY'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# True")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("getattr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"COUNTRY"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# china")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br")])]),n("hr"),s._v(" "),n("h2",{attrs:{id:"orm对象关系映射"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#orm对象关系映射"}},[s._v("#")]),s._v(" ORM对象关系映射")]),s._v(" "),n("p",[s._v("参考链接: "),n("code",[s._v("https://www.cnblogs.com/liuqingzheng/articles/9006025.html")])]),s._v(" "),n("blockquote",[n("p",[n("font",{attrs:{color:"blue"}},[n("strong",[s._v("需求:")])]),n("br"),s._v("\n数据库中的user表对应程序当中的User类."),n("br"),s._v("\nuser表中有条数据, id:1      name:lqz      password:123"),n("br"),s._v("\n希望可以实现个select方法,通过User.select(id=1)拿到这条数据.."),n("br"),s._v("\n因为User的一个实例应该对应user表中的一条数据, 所以返回的结果应当是User的一个实例."),n("br"),s._v("\n也希望实例obj能通过 obj.name 、obj.password 拿到对应的字段值!"),n("br"),s._v("\n当然,希望通过User类实现对user表的查询、增加、修改.. ╮(╯▽╰)╭"),n("br"),s._v("\n这样一来, 就不用写sql来操作啦!!")],1),s._v(" "),n("p",[n("strong",[s._v("大体的初步思考:")]),n("br"),s._v("\n1> 数据表中的每种字段类型都包含众多属性, 每种字段类型都映射一个字段类;"),n("br"),s._v("\n2> 数据表映射一个表类,该类会用类的数据属性表示这些字段类的实例,来映射数据表中的字段/每一列."),n("br"),s._v("\n     并且该表类的实例映射表中的一条数据;")])]),s._v(" "),n("p",[n("font",{attrs:{color:"green"}},[s._v("简易的ORM框架,要实现的大体效果如下:")])],1),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ORM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 定义数据表的字段")]),s._v("\n    name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" CharField"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    age "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" IntField"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 根据条件查询到用户表中的某条数据")]),s._v("\n    user0 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("select"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 修改")]),s._v("\n    user0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lqz_0'")]),s._v("\n    user0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 插入数据 ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# user = User(name='dc',name='dc',password='321') 可以拆分为以下三行代码.")]),s._v("\n    user "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    user"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dc"')]),s._v("\n    user"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("password "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("321")]),s._v("\n    user"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("insert"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 调用insert函数自动将数据插入到数据库中")]),s._v("\n\nps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("字典可以天然的存储数据"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[n("font",{attrs:{color:"brown"}},[s._v("原理看似也不简单,很绕,具体实现过程更绕.. orz 需谨慎,步步为营!!反复推敲! 培养思维模式尤为重要!")])],1),s._v(" "),n("h5",{attrs:{id:"field类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#field类"}},[s._v("#")]),s._v(" Field类")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("定义一个Field类表示数据表的 字段/列 具有哪些属性.\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name 列名/字段名、column_type字段类型、primary_key该字段是否是主健、default字段的默认值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n并衍生出两个子类 StringField和IntegerField.\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h5",{attrs:{id:"models类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#models类"}},[s._v("#")]),s._v(" Models类")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("定义了一个Models类\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" 继承了dict类.使得Model类具备字典的特性. 字典可以天然的存储数据.\n     再仔细想一想,一般类实例化有参数时,都会通过类中的__init__给实例增添独有的数据属性.\n     但这里通过Models"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("v1,k2"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("v2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("实例化得到对象obj,并不会有独有属性k1、k2\n     Models实例化的对象obj本质就是一个字典"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" 打印obj. 结果为"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("k1:v1,k2:v2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n     但它也具备实例的特性,可以进行属性引用"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("尽管obj.__dict__为空"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     Ps: Models类里的__init__方法写不写都不影响,按照查找规则\n         继承Models的User类的实例都会去调用dict里的__init__完成初始化.\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" 字典是不能通过"),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("取到value的"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" 但这里的实例具备字典的特性,可以通过"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.'")]),s._v("进行属性引用"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("实例.属性"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("的操作属性查找失败"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("在实例和类的命名空间中都没有该属性"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",会自动访问类中的__getattr__方法"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n     在Models类中重写了__getattr__,"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"self[key]"')]),s._v("会去看看字典实例本身有没有这个键"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n     使得Models的实例可以通过obj.k的形式取到obj字典对象本身对应的v   try"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("except"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n     再次说明,字典实例的命名空间为空"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("实例.属性"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("值"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("的操作 会自动访问类中的__setattr__\n     在Models类中重写了__setattr__,"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"self[key] = value"')]),s._v("\n     使得Models的实例可以通过 obj.k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("v")]),s._v(" 的方式给字典对象自身添加键值对.\n  再次强调,继承了dict,重写了两个方法 ╮"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("￣▽￣"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("╭\n  会使得 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"无论怎么对obj增删改查(两种方式 .、[]),obj.__dict__都为空!!操作的都是字典对象obj本身!"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("4")]),s._v(">")]),s._v(" Model类使用元类ModelsMetaclass,这样就可以拦截Model类以及继承Model类的子类的创建过程"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  \n简单来说:\n  Models继承dict字典类,重写__setattr__和__getattr__,是为什么?\n  ★ 先要明白 类实例化对象obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("报错"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("字典my_dict.k报错\n  -- 前者是为了Model的子类User在实例化后,具备字典的特性,能像字典一样obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("v往字典里添加k-v\n     也可以在User实例化时传递一堆 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("k")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("v 完成实例化.\n  -- 后者是为了能通过obj.k"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("v 往字典里添加修改k-v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 当然也可以通过obj.k成功取值.\n  注意: 实例 obj.__dict__ 是空的"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h5",{attrs:{id:"user类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#user类"}},[s._v("#")]),s._v(" User类")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("创建一个User类继承Models类 -- 便于实验\n  该类定义了4个类属性\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" table_name表名 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" 字符串类型\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" id编号、name姓名、password密码 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" 都是Field字段类型,每个字段都包含多个属性"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name、column_type等"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  User类 -- 用户表\n  User类里类属性table_name -- 表名\n  User类里类属性id、name、password -- 用户表每一列的名字,也就是字段名\n  User类实例化得到的实例对象 -- 用户表里的一条/一行数据\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("需要User类实例化的时候,可以传任意 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("k")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("v 的数据"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("这也就是为啥Models类要继承dict类"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  ★ +++\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("当时我特别疑惑,怎么就将User的实例obj变成用户表中的数据啦???怎么想都想不通."),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"破解的关键在于User类的实例obj,本质是一个字典"')]),s._v(",我们可以取到字典本身里的键值对构建sql语句,\n  通过第三方库pymysql实现对用户表数据的操作.\n  当然我们也可以反过来通过pymysql将查到的数据,构建User的实例"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"一条数据 对应 一个实例"')]),s._v("\n  简单来说,若pymysql的查询结果是"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("id:1,name:"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dc'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("id:2,name:"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lqz'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  对结果for循环,对循环得到的每一项拆包, "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("**item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("item")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  列表中的两个元素是两个User类的实例 -- User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dc'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("、User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(",name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lqz'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n  即"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'★ 将一条条的数据转化成User类的实例对象!!'")]),s._v("'\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 注意: 对实例的打印结果是"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("id:1,name:"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dc'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("id:2,name:"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lqz'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 看起来是字典,但不仅仅是字典"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  思考？若User类的父类Models不继承dict能否实现这些功能?有何区别?暂且放下.做完整个项目后再思考"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[n("font",{attrs:{color:"brown"}},[s._v("不同的实现: ")]),n("br"),s._v(" "),n("code",[s._v("https://seanlee97.github.io/2018/08/23/谈谈python中的元类以及实现一个简单的ORM框架/")]),n("br"),s._v(" "),n("font",{attrs:{color:"blue"}},[s._v("(这个里面就没有用字典!! 它的解决方案是在Models类的"),n("code",[s._v("__init__")]),s._v("里使用了setattr完成了初始化)")])],1),s._v(" "),n("h5",{attrs:{id:"modelsmetaclass元类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#modelsmetaclass元类"}},[s._v("#")]),s._v(" ModelsMetaclass元类")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("自定义一个ModelsMetaclass元类\n需求: 数据库中的每个表,都有表名、每一列的列名、以及主键是哪一列\n      我们需要将数据库中的一张表与一个类相对应,类的命名空间中应该有属性来映射数据表中的这些属性\n分析: 使用元类的类在创建完成后,类的命名空间里必须有table_name、primary_key、mappings属性"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n      table_name -- 表名\n      primary_key -- 主键名\n      mappings -- 表中的每一列/表中所有的字段 即一堆Field对象\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"相当于将一张数据表的关键信息整理好!"')]),s._v("\n      Ps:整理完毕后,类定义过程中执行类代码得到的放在类命名空间里的那些内容就可以丢弃啦.\n解决: 需要重写元类里的__new__方法.\n\n简单来说:\n   Q:设置Models的元类是ModelsMetaclass,是为什么?\n   A:是为了Model的子类User在创建时,被拦截.\n     整理好数据,将table_name、primary_key和一堆Field对象 放到User类的__dict__中\n     User可以通过.的方式可以对__dict__中的属性进行引用"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n     \n具体实现过程:\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" 数据库表的父类Models不需要拦截,走正常的流程 "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Models"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" -- 拿到表名\n      attrs是一个字典,里面存放的是类定义执行类代码的过程中产生的键值对\n      table_name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" attrs.get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'table_name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 字典的获取值的方法,获取不到默认返回None")]),s._v("\n      若attrs中没有键"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"table_name"')]),s._v(",用类名当作表名\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v(">")]),s._v(" -- 将数据表的每个字段放到mappings字典中 以及 拿到primary_key主键名/设置了主键的字段的名字\n      mappings字典中的k是User类中设置的字段名,v是该字段名对应的Field字段实例对象\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'id'")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("__main__.IntegerField object at 0x7"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("__main__.StringField "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      attrs中还有__doc__、__module__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("这些东西.不是我们需要的"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n      So,要对attrs中的k-v进行判断,v是Field类型的放进去,即把attrs中与数据库表字段有关的列提取出来.\n      若v是Field类型,还可以根据v的primary_key属性判断该字段是否是主键"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n      注意,健壮性的判断,只能有一个主键"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("一开始primary_key设置的初始值是None.\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("4")]),s._v(">")]),s._v(" -- 一点优化\n      mappings字典会存入User.__dict__中的,So,放入mappings的属性,User.__dict__中没必要再存一份.\n      想一想,不pop掉的话\n          new_user "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'egon'")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'666'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          getattr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user, name, None"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 拿到的就是类的命名空间里name对应的Field对象啦,不是name的值"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n      若User类/表中没有主键,抛异常\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("5")]),s._v(">")]),s._v(" -- 将table_name、 primary_key、mappings放入User.__dict__中"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" 并完成User类的创建.\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"提醒一点,User的命名空间里的东西,User类的实例是共享的!!"')]),s._v(" 为了后面的查询更新和插入功能的实现"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n      \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"这样一折腾,只要类被该元类一拦截,这些被拦截的类的命名空间里都有一样的key值!!"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("h5",{attrs:{id:"mysql类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mysql类"}},[s._v("#")]),s._v(" Mysql类")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("通过第三方pymysql模块,实现了Mysql类,为创建的sql链接提供了查询、更新的接口"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\nms "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Mysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n查询接口 -- ms.select"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n更新、保存接口 -- ms.execute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n注意几点:\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" 查询的结果集是列表嵌套字典的格式 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("k:v,k:v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("k:v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autocommit")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("True\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v(">")]),s._v(" 用类方法实现单例模式,避免每次查询都会Mysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("创建一个新的链接\n     查询、更新、插入的操作都用的同一个数据库链接"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("4")]),s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'★★★'")]),s._v(" 特别注意"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" 用"),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("cursor.execute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sql, "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("对sql自动进行拼接并执行,可以防止sql注入.\n     "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'但只会拼接字段值!!不会对表名和字段名进行拼接!!'")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" pymysql\n\nclass Mysql:\n    __instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" None\n\n    def __init__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n        self.conn "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pymysql.connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("host")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1"')]),s._v(",\n            "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(",\n            "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"root"')]),s._v(",\n            "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123456"')]),s._v(",\n            "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("charset")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"utf8"')]),s._v(",\n            "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("database")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"youku"')]),s._v(",\n            "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autocommit")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("True  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 自动提交")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self.cursor "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" self.conn.cursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cursor"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("pymysql.cursors.DictCursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 关闭")]),s._v("\n    def close_db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n        self.cursor.close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self.conn.close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 查询")]),s._v("\n    def select"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self, sql, "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("args")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("None"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n        pass\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 更新、保存 update、insert")]),s._v("\n    def execute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self, sql, args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n        pass\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 使用类方法实现单例模式")]),s._v("\n    @classmethod\n    def singleton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" not cls.__instance:\n            cls.__instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" cls.__instance\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v("\n    ms "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Mysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    res "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ms.select"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"select * from user where id=%s"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    print"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    ms.close_db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br")])]),n("h5",{attrs:{id:"完善model类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#完善model类"}},[s._v("#")]),s._v(" 完善Model类")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 每个数据表都应该具备查询、插入、保存等方法!!")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" def select_res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cls, **kwargs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":   -- 静态方法"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("这里手动传了一个类对象进去  调用查询接口取到数据\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" def select_one"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cls, **kwargs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":   -- 类方法  只会得到一条数据\n   该方法里面会调用静态方法select_res\n   拿到结果后,会将该条数据转化成User类的实例对象"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v(">")]),s._v(" def select_many"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cls, **kwargs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":  -- 类方法  得到一条或者多条数据\n   同理,该方法也会调用静态方法select_res\n   "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'★ 拿到结果后,会将一条条的数据转化成User类的实例对象!!'")]),s._v("\n   注意"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("该方法里有个判断,当kwargs为空时,会重新拼接一个sql语句,查询该表中的所有数据"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n   体会下,细品 "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("**r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("r")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("4")]),s._v(">")]),s._v(" def update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": -- 实例方法/对象的绑定方法 对数据进行更新  该方法是真的绕"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("-_-\n   我们默认用主键进行更新"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n   ★ 注意:有了真正的实例/拿到一条数据才能真正的进行更新,应具体到某个实例对象,所以该方法不能是类方法"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n   思考分析,首先我们要拼接一个sql "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("update user "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lqz'")]),s._v(",password"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" where "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("id")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n   拆分开来,我们要拿到 \n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" 表名user\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lqz'")]),s._v(",password"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n      name、password这些数据库字段在User类的命名空间的mappings里放着呢"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n      命名空间里的键mappings对应的值是一个字典. 该字典的键是字段名,值是Field对象.\n      User类的命名空间 User.__dict__ 是能被User的实例访问到的"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n      fields列表里放除了主键的所有字段,字段经过了处理 "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("字段 + "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'=?'")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" 主键字段id以及该字段的值\n      注意这句代码"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("pr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" getattr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self, k, None"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" -- 将主键的值给了pr变量\n         User实例和User类的命名空间中都没有名为id的键\n         "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'★★★'")]),s._v("就会去调用Models里重写的__getattr__方法"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" 通过 self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 拿到该条数据字段id对应的值"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n   都得到后,拼接成一个sql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n   ms.execute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sql, args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 需要args"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'★★★'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("args.append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("getattr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self, k, None"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("其实就是取self这个字典本身除了主键外其它字段的值"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n   update该方法怎么用?\n      user "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" User.select_one"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      user.name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dc0'")]),s._v("\n      user.update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("5")]),s._v(">")]),s._v(" def insert"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": -- 实例方法/对象的绑定方法 插入新数据\n   注意一点,构建sql语句,sql语句中有多少个字段,sql语句的valuse后面就要跟多少个值.\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("h5",{attrs:{id:"orm框架思路总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#orm框架思路总结"}},[s._v("#")]),s._v(" ORM框架思路总结")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("用户表 -- User类\n用户表的一行数据 -- User类的一个实例obj\n\nUser类中的类属性, "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("字段名 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Field字段对象"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n\nUser类的基类Models继承dict,User的实例obj就是一个字典,User类实例化的过程里就会往字典里传值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n虽然obj是一个实例,但通过obj.attr是拿不到值的,因为obj以及User的__dict__中没有"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\nSo,重写__getattr__和__setattr__方法"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" \n让obj.attr从obj这个字典本身里取值,以及obj.attr"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value,往obj字典里添加值"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\nModels不仅继承dict,还会使用自定义的元类ModelMetaclass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n使得User类在创建过程,就将数据组织好放到User类的__dict__中,并将那些重复的数据删除\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("删除是为了保证使用反射时拿到的是字典本身的数据"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n组织的数据包含table_name、primary_key和一堆Field对象 -- 主要就是在操作元类的参数attrs\n\n查询通过User类来查询,是类方法\n更新的user类的实例,添加的也是user类的实例"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n查询、更新、添加 大体思路就是 构建sql语句,创建mysql链接,调用相应的接口"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n有个需要特别注意的地方:\n   对User的实例obj使用反射 getattr 会调用__getattr__最终拿到的是obj这个字典本身的内容.\n\n数据库接口的实现就是使用第三方模块pymysql构建的,返回结果是列表字典、用单例使得查询更新添加用的同一个链接"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h5",{attrs:{id:"数据库连接池"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库连接池"}},[s._v("#")]),s._v(" 数据库连接池")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("程序操作数据库需要建立链接"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("来一个查询建立一个链接、来一个更新建立一个链接"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n不一会"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("数据库的连接数就满了!所以我们使用了单例"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("使得该程序对数据库的查询更新添加等操作用的是同一个链接!\n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"数据库连接单例是指在项目运行期间,始终只有一个数据库链接!即这个链接在该项目程序中是复用的!"')]),s._v("\n\n但如果有"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("个客户端并发过来"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("要建立"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("个链接？依旧使用单例模式的数据库？\nPs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("一点小思考\n   该场景下"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("若使用单例数据库"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("有点协程的味道! "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 该链接在多个客户端之间来回切"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("切换"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("保存状态 \n   具体如何实现"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("不晓得 但一般情况下"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("协程的链接数没记错的话最好不超过"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v("个"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n解决方案"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  建立数据库连接池控制网站最多连接数据库的数量"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("够了后来者就排队"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  创建连接后不用此连接了但不断开暂时存起来"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("以便连接的重用!\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("dbutils是python的一个用于实现数据库连接池的模块!"),n("br"),s._v("\ndbutils提供了两种外部接口:"),n("br"),s._v("\n     PersistentDB -- 提供线程专用的数据库连接,并自动管理连接;"),n("br"),s._v(" "),n("font",{attrs:{color:"brown"}},[s._v("PooledDB")]),s._v(" -- 提供线程间可共享的数据库连接,并自动管理连接. "),n("font",{attrs:{color:"brown"}},[s._v("(我们一般使用这种模式!)")])],1),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" pymysql\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" dbutils"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pooled_db "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" PooledDB\n\nPOOL "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" PooledDB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    creator"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("pymysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    maxconnections"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    mincached"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    maxcached"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    maxshared"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    blocking"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    maxusage"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    setsession"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    ping"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    host"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'127.0.0.1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    port"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    user"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    password"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123456'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    database"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'youku'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    charset"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'utf8'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    conn "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" POOL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("connection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    cursor "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" conn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    cursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("execute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'select * from user'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    result "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fetchall"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    cursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    conn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("h5",{attrs:{id:"功能测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#功能测试"}},[s._v("#")]),s._v(" 功能测试")]),s._v(" "),n("p",[s._v("user用户表设计")]),s._v(" "),n("p",[n("img",{attrs:{src:a(446),alt:""}})]),s._v(" "),n("p",[s._v("user用户表数据")]),s._v(" "),n("p",[n("img",{attrs:{src:a(447),alt:""}})]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Notic")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Models"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    table_name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"notice"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" IntegerField"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'id'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("primary_key"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" StringField"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    content "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" StringField"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'content'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    user_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" IntegerField"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user_id'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- create_time 它会自动填充上, 这里省事就不写啦!")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("notice公告表设计")]),s._v(" "),n("p",[n("img",{attrs:{src:a(448),alt:""}})]),s._v(" "),n("p",[s._v("公告表数据")]),s._v(" "),n("p",[n("img",{attrs:{src:a(449),alt:""}})]),s._v(" "),n("hr")])}),[],!1,null,null,null);t.default=e.exports},446:function(s,t,a){s.exports=a.p+"assets/img/3.a8aa1361.jpeg"},447:function(s,t,a){s.exports=a.p+"assets/img/4.abc02ebe.jpeg"},448:function(s,t,a){s.exports=a.p+"assets/img/7.7b0937b9.jpeg"},449:function(s,t,a){s.exports=a.p+"assets/img/8.4a91b2e6.jpeg"}}]);