(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{1232:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("blockquote",[n("p",[s._v("回忆杀"),n("br"),s._v("\n站在并发编程的角度 锁分为两大类 互斥锁: 同一时间只能由一个人用;信号量: 同一时间多人在用")])]),s._v(" "),n("h2",{attrs:{id:"什么是锁机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是锁机制"}},[s._v("#")]),s._v(" 什么是锁机制？")]),s._v(" "),n("blockquote",[n("p",[s._v("举个栗子: 同一个办公室的同事们, 都想使用打印机打印文件. 如果不加以控制. 可能出现两个人同时打印不同的内容在一个文件里, 就会引起内容混乱.")])]),s._v(" "),n("p",[s._v('事务的锁机制: 当有并发的的多个事务同时操作同一份数据时,只有"抢到"了锁的事务,才能真正的去操作数据,使得数据的安全性得到保证。')]),s._v(" "),n("p",[s._v("锁保证并发的多个事务同一时间只有一个能运行, 会一定程度上降低程序的运行效率. 但能大大提升数据的安全性.")]),s._v(" "),n("hr"),s._v(" "),n("h2",{attrs:{id:"数据库锁的分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库锁的分类"}},[s._v("#")]),s._v(" 数据库锁的分类")]),s._v(" "),n("blockquote",[n("p",[s._v("1> 按锁 "),n("strong",[s._v("粒度")]),s._v(" 划分:\t可分为行级锁、表级锁、页级锁 -- 粒度依次增大"),n("br"),s._v("\n        锁的级别依次递增, 级别越高 并发效率越低, (主要关注行级锁,后面两基本不用)"),n("br"),s._v("\n2> 按锁 "),n("strong",[s._v("级别")]),s._v(" 划分:\t可分为 共享锁、排他锁"),n("br"),s._v("\n        共享侧重于只让读不让写,排他能改也能写\n3> 按锁 "),n("strong",[s._v("使用方式")]),s._v(" 划分:\t可分为 乐观锁、悲观锁"),n("br"),s._v("\n4> 按锁 "),n("strong",[s._v("加锁方式")]),s._v(" 划分:\t可分为 自动锁 、显式锁"),n("br"),s._v("\n5> 按锁 "),n("strong",[s._v("操作")]),s._v(" 划分:\t可分为DML锁、DDL锁")])]),s._v(" "),n("hr"),s._v(" "),n("h2",{attrs:{id:"行级锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#行级锁"}},[s._v("#")]),s._v(" 行级锁")]),s._v(" "),n("blockquote",[n("p",[s._v("故名思意, 表示只针对当前操作的行(eg: 4 5 6行)进行加锁, InnoDB引擎支持."),n("br"),s._v("\n行级锁加锁粒度最小,但加锁的开销也最大."),n("br"),s._v("\n行级锁分为 互斥锁(排他锁)  和 共享锁 两种.")])]),s._v(" "),n("p",[s._v("要知道一点: 在软件开发过程中,我们通常会将库、表结构建好. 往后都是针对表记录的操作."),n("br"),s._v("\n操作无非四种, insert delete update select  写 - 增删改; 读 - 查")]),s._v(" "),n("h4",{attrs:{id:"互斥锁-排他锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#互斥锁-排他锁"}},[s._v("#")]),s._v(" 互斥锁(排他锁)")]),s._v(" "),n("blockquote",[n("p",[s._v("排他锁简称X锁 一旦某一数据获得排他锁后,其它事务都不能对此数据再加锁,什么锁(x锁、s锁)都不行！"),n("br"),s._v("\n一旦事务A对数据P加了排他锁:"),n("br"),s._v("\n        那么其它事务无法对数据P加任何锁;"),n("br"),s._v("\n        只有拿到锁的事务A可以操作数据P,而且可以读也可以写 事务A对数据P加什么锁(x锁、s锁)都行..")])]),s._v(" "),n("blockquote",[n("p",[n("strong",[s._v("对于写操作 insert、update、delete语句, InnoDB会自动给涉及的数据加锁, 而且是排他锁")]),n("br"),s._v("\n        简单来说,写操作有锁才能成功执行 事务A已经给了这行数据排他锁了 其他事务对这行数据给不了锁了啊"),n("br"),s._v(" "),n("strong",[s._v("对于读操作 select语句, 默认不会受任何锁的影响,InnoDB不会对其加任何锁, 需要我们手动自己加")]),n("br"),s._v("\n        SELECT ... LOCK IN SHARE MODE;"),n("br"),s._v("\n        SELECT ... FOR UPDATE;")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\nselect * from employee;\n+----+---------+-----+\n| id | name    | age |\n+----+---------+-----+\n|  1 | egon    |  18 |\n|  2 | alex    |  18 |\n|  3 | wupeiqi |  20 |\n+----+---------+-----+\n*/")]),s._v("\n\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'EGON'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'666'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'777'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abc'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abc'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n终端A直接执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("修改成功"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("紧接着终端B执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("也修改成功"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n解释: A终端"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("隐式开启了事务"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("为"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v("语句加了互斥锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("id为"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("的这一行数据被锁住了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("其它终端会话都不能对这一行数据进行写操作"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("待隐式"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("commit")]),s._v("提交事务后"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("互斥锁释放"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("因为A终端对id为"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("的行加的锁释放了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("B终端执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("就不会阻塞"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("不费吹灰之力就抢到了这把锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n终端A和B同时都"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Begin")]),s._v("开启了一个事务"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("A执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("成功"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("B运行"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("语句是能成功的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("语句不受锁的影响"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("但B终端执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("会阻塞在原地"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("当A终端"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rollback")]),s._v("或"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("commit")]),s._v("释放锁后"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("B终端的语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("立刻执行成功"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("补充: A可以连续执行成功语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("和语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" 因为排它锁一直在事务A操作的id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("的那行身上啊！"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n终端A和B同时都"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Begin")]),s._v("开启了一个事务"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("A执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("查出了结果并且把id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("的这行加互斥锁给锁住了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("B执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("是能成功查处结果的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("因为单纯的"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("语句不受锁的影响"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("B接着执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("分析:给id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("的行加排它锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("包含id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("的那行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("敲下回车会发现直接阻塞在原地"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("B终端ctrl"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("c强行退出后执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("分析:"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" 语句对id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("加排它锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("敲下回车"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("依旧会阻塞在原地"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("why?因为A终端没有对id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("的行的锁进行释放！！但若B执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("是能成功的！！why？看下方的解析。\n\n【注意: id字段是主键是索引！！ "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("innodb")]),s._v("锁的其实是索引！即只有加了索引的字段才是行级锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("命中了索引就锁行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("若此字段不是索引"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("它会将表中的所有行都锁住"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("相当于表级锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("实际上是行级锁哦 只是相当于"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("】\n先将表employee的主键id字段给删除"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("modify")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n终端A和B同时都"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Begin")]),s._v("开启了一个事务"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("A执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("B执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("都会阻塞在原地"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("h4",{attrs:{id:"共享锁-读锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#共享锁-读锁"}},[s._v("#")]),s._v(" 共享锁(读锁)")]),s._v(" "),n("blockquote",[n("p",[s._v("共享锁 简称S锁")])]),s._v(" "),n("blockquote",[n("p",[s._v("若事务A对数据P加上共享锁后, 其他事务只能对数据P再加共享锁或不加锁"),n("br"),s._v("\n        一旦多个事务都对数据P加了共享锁,大家都只能读不能改..")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[s._v("事务A对id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("的这一行加了共享锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("事务B也对id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("的这一行加了共享锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n事务A能否执行对id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("这一行的"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v("操作？\n不可以"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("因为"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v("语句默认会加排它锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("但是加不上！因为事务B对这行数据加了共享锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("事务A只能对其加共享锁或不加锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n站在事务B的角度同理"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("事务B也不能对这一行数据进行"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v("操作"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n特例: 若事务A对id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("的这一行加了共享锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("没有其他事务对这一行数据加共享锁了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n这样的话"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("没人跟事务A抢锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("事务A可以对一行数据进行"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v("操作"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("再给这行数据加一个互斥锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("---")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 死锁问题 */")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("lock")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("share")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n终端A和B同时都"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Begin")]),s._v("开启了一个事务"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" 事务A执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("事务"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("也执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("接着"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("事务B执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("阻塞"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("因为站在事务B的角度事务A对id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("这一行加了共享锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("那么事务B也就只能对这一行加共享锁或不加锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("的"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v("的排它锁加不上导致了阻塞"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" 此时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("事务A也执行了语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("终端A直接命令行报错"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR 1213 (40001): Deadlock found when trying to get lock; try restarting transaction"')]),s._v("触发了死锁现象"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("事务A被强制终止"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("释放了所有锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" 事务B的语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("立刻运行成功"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("hr"),s._v(" "),n("h2",{attrs:{id:"innodb的锁机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#innodb的锁机制"}},[s._v("#")]),s._v(" Innodb的锁机制")]),s._v(" "),n("blockquote",[n("p",[s._v("InnoDB(索引组织表)支持行级锁和表级锁,默认为行级锁.")])]),s._v(" "),n("h4",{attrs:{id:"innodb行级锁的三大特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#innodb行级锁的三大特点"}},[s._v("#")]),s._v(" InnoDB行级锁的三大特点")]),s._v(" "),n("p",[n("strong",[s._v("锁的是索引")]),s._v("\n只有在命中索引的情况下,才会锁住符合条件的一行或几行.没命中的话,锁全部行,相当于锁表.")]),s._v(" "),n("blockquote",[n("p",[s._v("具体来说,innodb存储引擎的索引分为主键索引和辅助索引"),n("br"),s._v("\n        命中的是主键索引,锁的就是主键索引对应的记录;"),n("br"),s._v("\n        命中的是辅助索引,会先锁住该辅助索引的记录,再锁住相关的主键索引的记录...\n        如果没有索引,Innodb会通过隐藏的聚簇索引来对记录加锁..实际效果跟表级锁一样..")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("MYISAM支持表锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("不支持行锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("InnoDB引擎支持行锁和表锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n即在MYISAM下如果要加锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("无论怎么加都会是表锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n在InnoDB引擎支持下如果是基于索引查询的数据则是行级锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("否则就是表锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\nSo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("一般情况下我们会选择使用innodb引擎"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("并且在 搜索 时也会使用索引"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("命中索引"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n在innodb引擎中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("update、insert、delete的行为会自动加锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("内部都会先申请锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("排它锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("申请到之后才执行相关操作"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("最后再释放锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n所以"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("当多个人同时向数据库执行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("insert、update、delete等操作时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("内部加锁后会排队逐一执行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n而select则默认不会申请锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("若你想要让select去申请锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("则需要配合 事务 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" 特殊语法来实现"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n举个例子"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" `"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" update`"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("排它锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("加锁之后"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("其他不可以读写"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\nbegin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 开启事务\n\tselect "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" L1 where name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"武沛齐"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" name列不是索引（表锁）\ncommit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 结束事务"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("事务结束后释放锁!\n\nbegin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 或者 start transaction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tselect "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" L1 where "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),s._v("列是索引（行锁）\ncommit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h4",{attrs:{id:"行级锁三种算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#行级锁三种算法"}},[s._v("#")]),s._v(" 行级锁三种算法")]),s._v(" "),n("blockquote",[n("p",[s._v("三种算法都以以命中索引为前提！！")]),s._v(" "),n("p",[n("font",{attrs:{color:"blue"}},[s._v("innodb引擎的行级锁算法默认是Next-Key Lock")])],1)]),s._v(" "),n("p",[s._v("Record Lock (单个记录加锁) : 只对符合条件的行加锁!")]),s._v(" "),n("p",[s._v("Gap Lock (间隙锁) : 锁定一个范围,但不包括记录本身"),n("br"),s._v("\n        何为间隙？eg 年龄18 20 25, 18到20之间就是间隙;20到25之间也是间隙!"),n("br"),s._v("\n        间隙锁可以解决读现象里的幻读.")]),s._v(" "),n("p",[n("font",{attrs:{color:"red"}},[s._v("Next-Key Lock")]),s._v("  = Record Lock + Gap Lock"),n("br"),s._v("\n        比如where ege=20,他就会把20对应的这行记录以及20的上下两个间隙(18-20,20-25)都锁住！")],1),s._v(" "),n("hr"),s._v(" "),n("h2",{attrs:{id:"死锁问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#死锁问题"}},[s._v("#")]),s._v(" 死锁问题")]),s._v(" "),n("h4",{attrs:{id:"简单情况"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简单情况"}},[s._v("#")]),s._v(" 简单情况")]),s._v(" "),n("blockquote",[n("p",[s._v("事务A:"),n("br"),s._v("\nbegin;"),n("br"),s._v("\nselect * from employee where id = 1 lock in share mode; -- step1"),n("br"),s._v("\n#加锁失败 事务B已经对id=3的行加锁了"),n("br"),s._v("\nupdate employee set name='xxx' where id = 3; -- step3 阻塞在原地")]),s._v(" "),n("p",[s._v("事务B:"),n("br"),s._v("\nbegin;"),n("br"),s._v("\n#灵魂三问: 加的什么锁?对什么加的锁?在加锁的时候,有无其他事务对其加锁?"),n("br"),s._v("\n#加排他锁;id=3的行加锁;没有 \t加成功了！"),n("br"),s._v("\ndelete from employee where id = 3;  -- step2"),n("br"),s._v("\n#对id=1的行加排他锁;加锁失败! 因为事务A对id=1的行加了共享锁"),n("br"),s._v("\ndelete from employee where id = 1;  -- step4 阻塞在原地")])]),s._v(" "),n("h4",{attrs:{id:"并发隐藏情况"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#并发隐藏情况"}},[s._v("#")]),s._v(" 并发隐藏情况")]),s._v(" "),n("blockquote",[n("p",[s._v("高并发的时候,有几率出现这样的问题.. （innodb锁机制的三大特点导致的）")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 表emp 表对id字段加了主键索引;name字段和age字段都加了辅助索引..")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----+---------+-----+-----+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" name    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" age "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----+---------+-----+-----+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" egon    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("78")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" male"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" xxxx    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" male"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----+---------+-----+-----+")]),s._v("\n\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'egon'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxxx'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" emp "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" sex"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'famale'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" age "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("78")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 语句1和语句2都命中的辅助索引,会先对辅助索引加锁,再对主键索引加锁")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- eg: 语句1锁的先后 (egon,1) (xxxx,2)(1,整行)(2,整行)")]),s._v("\n\n讲道理\n若事务A执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("会对名字为"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'egon'")]),s._v("和"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxxx'")]),s._v("的行加了互斥锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("对主键索引加锁顺序是"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n若事务B执行语句"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("会对年龄为"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v("和"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("78")]),s._v("的行加互斥锁"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("对主键索引加锁的顺序是"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n事务A和事务B并发同时运行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("事务A上来先把主键"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("给锁住"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("事务B上来先把主键"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("锁住"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("接下来就BBQ了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  事务A对事务B说你把主键"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("给我释放出来"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("我要加锁 尬住了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  事务B对事务A说你把主键"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("给我释放出来"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("我要加锁 尬住了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[n("img",{attrs:{src:a(528),alt:""}})]),s._v(" "),n("hr"),s._v(" "),n("h2",{attrs:{id:"事务隔离机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离机制"}},[s._v("#")]),s._v(" 事务隔离机制")]),s._v(" "),n("blockquote",[n("p",[s._v("事务具有原子性、一致性、隔离性、持久性四大特性.. 而隔离性顾名思义指的就是事务彼此之间间隔离开,多个事务在同时处理一个数据时彼此之间互相不影响.若隔离不够好,就会出现读现象..")]),s._v(" "),n("p",[s._v("事务的隔离级别越高, 并发能力也就越低")])]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("font",{attrs:{color:"red",size:"2"}},[s._v("Y：可能出现      N：不会出现")])],1),s._v(" "),n("th",{staticStyle:{"text-align":"center"}},[s._v("脏读")]),s._v(" "),n("th",{staticStyle:{"text-align":"center"}},[s._v("不可重复读")]),s._v(" "),n("th",{staticStyle:{"text-align":"center"}},[s._v("幻读")])])]),s._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[s._v("Read uncommitted 未提交读")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("Y")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("Y")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("Y")])]),s._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[s._v("Read committed      提交读")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("N")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("Y")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("Y")])]),s._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[s._v("Repeatable reads    可重复读")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("N")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("N")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("Y")])]),s._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[s._v("Serializable               可序列化")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("N")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("N")]),s._v(" "),n("td",{staticStyle:{"text-align":"center"}},[s._v("N")])])])]),s._v(" "),n("p",[s._v("READ UNCOMMITTED：可以读取事务中还未提交的被更改的数据."),n("br"),s._v("\nREAD COMMITTED：只能读取事务中已经提交的被更改的数据."),n("br"),s._v("\nREPEATABLE READ：表示一个事务中, 对一个数据读取的值, 永远跟第一次读取的值一致, 不受其他事务中数据操作的影响。这也是 MySQL 的默认选项."),n("br"),s._v("\nSERIALIZABLE：表示任何一个事务, 一旦对某一个数据进行了任何操作, 那么, 一直到这个事务结束, MySQL 都会把这个数据锁住, 禁止其他事务对这个数据进行任何操作.")]),s._v(" "),n("p",[s._v("题外话: Django框架里推荐使用RC(提交读)机制,框架会帮忙解决不可重复读和幻读问题...")]),s._v(" "),n("p",[s._v("mysql默认的是Repeatable reads机制,这一机制没有解决幻读问题! 但是用Innodb引擎的话,它的Next-Key Lock 行级锁算法解决啦！")]),s._v(" "),n("hr"),s._v(" "),n("h2",{attrs:{id:"乐观锁和悲观锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁和悲观锁"}},[s._v("#")]),s._v(" 乐观锁和悲观锁")]),s._v(" "),n("blockquote",[n("p",[s._v("乐观锁和悲观锁更像是一种编程思想.. 是锁具体的一种应用方式")])]),s._v(" "),n("h4",{attrs:{id:"悲观锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#悲观锁"}},[s._v("#")]),s._v(" 悲观锁")]),s._v(" "),n("p",[s._v("每次写数据都认为一定会有人跟它同时写这份数据.. 不管三七二十一,有没有人跟我抢,一上来就加锁!"),n("br"),s._v("\n安全性高,效率低,并发低,会导致大量的人等待.. (几乎不用..效率太低了)")]),s._v(" "),n("h4",{attrs:{id:"乐观锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁"}},[s._v("#")]),s._v(" 乐观锁")]),s._v(" "),n("p",[s._v("每次写数据都认为没人跟它同时写这份数据.."),n("br"),s._v("\n没有加锁,不影响并发效率;大量人同时修改,就会有大量的提交失败..无效提交..")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[s._v("它没有用数据库自带的锁机"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("那如何实现呢？\n方式一:\n在数据库里加一个版本号的字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("每次写后看版本号跟写之前一不一样"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("不一样写失败"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 若一样"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 那写完后版本号加"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n方式二:\n在数据库里加一个时间戳的字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("写操作后看时间戳有无被更改"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("被更改了这次写操作就失败了"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("hr"),s._v(" "),n("h2",{attrs:{id:"mvcc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mvcc"}},[s._v("#")]),s._v(" MVCC")]),s._v(" "),n("blockquote",[n("p",[s._v("Mysql Inodb存储引擎实现的事基于多版本的并发控制协议 — MVCC."),n("br"),s._v("\nMVCC最大的好处在于：读不加锁, 读写不冲突.. 这机制有效的解决了数据的脏读问题!")]),s._v(" "),n("p",[s._v("MVCC中, 读操作可分为两类: 当前读和快照读..")])]),s._v(" "),n("h4",{attrs:{id:"快照读"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快照读"}},[s._v("#")]),s._v(" 快照读")]),s._v(" "),n("p",[s._v("每开一个事务,默认读的是快照; 简单的select操作, 属于快照读,不加锁.")]),s._v(" "),n("h4",{attrs:{id:"当前读"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#当前读"}},[s._v("#")]),s._v(" 当前读")]),s._v(" "),n("p",[s._v("特殊的读操作, 插入/更新/删除操作, 属于当前读, 需要加锁.."),n("br"),s._v("\n        加了共享锁只能读内容,不能改,所以读的内容一定是当前内容"),n("br"),s._v("\n        互斥锁也是, 因为互斥嘛读的也是最新的内容")]),s._v(" "),n("hr"),s._v(" "),n("p",[n("strong",[s._v("基于python代码的示例")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" pymysql\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" threading\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    conn "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pymysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        host"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'127.0.0.1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n        port"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n        user"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        passwd"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root123'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        charset"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"utf8"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        db"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'userdb'")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    cursor "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" conn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pymysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cursors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DictCursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cursor = conn.cursor()")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启事务")]),s._v("\n    conn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("begin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    cursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("execute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"select id,age from tran where id=2 for update"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# fetchall ({"id":1,"age":10},{"id":2,"age":10}, )  ((1,10),(2,10))')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# {"id":1,"age":10}   (1,10)')]),s._v("\n    result "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fetchone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    current_age "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'age'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" current_age "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        cursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("execute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"update tran set age=age-1 where id=2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"已售罄"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    conn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    cursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    conn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        t "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" threading"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Thread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("target"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    run"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("hr")])}),[],!1,null,null,null);t.default=e.exports},528:function(s,t,a){s.exports=a.p+"assets/img/WechatIMG24.31e050a1.jpeg"}}]);