(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{1226:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"_01-数据存储过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_01-数据存储过程"}},[s._v("#")]),s._v(" 01 数据存储过程")]),s._v(" "),n("ul",[n("li",[s._v("创建表的时候,不要在最后一个字段加逗号")]),s._v(" "),n("li",[s._v("在mysql里,空值不等于空字符串.一个空字符串的长度为0,一个空值的长度为空,并且空值是占空间的.")]),s._v(" "),n("li",[s._v("表名、字段名用英文,用汉字的话在遇到编码问题容易出错.")]),s._v(" "),n("li",[s._v("建议每次插入数据时的sql语句的字段名都写,这样不容易出错.")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- id主键索引 sex索引 查看explain执行计划用了sex索引 why？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- sex只有2个可能的值,男和女 区分度低 辅助索引的树的高度按照理论应该更高 像一根棍 只有可能是辅助索引叶子节点存储的sex-id相比于主键索引的id-value能更多,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 这里的sql语句是计算行数,综合下来弥补了数高度的问题..")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("strong",[s._v("sex列普通索引")]),s._v("  0 1 指代 性别男女")]),s._v(" "),n("p",[n("img",{attrs:{src:a(515),alt:""}})]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"_02-字段类型定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_02-字段类型定义"}},[s._v("#")]),s._v(" 02 字段类型定义")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("字段类型的定义,数据一定不要超过取值范围,在此前提下再考虑空间问题.")]),s._v(" "),n("p",[s._v("eg: 超市的商品表的itemnumber商品编号用的"),n("strong",[s._v("int")]),s._v("而不是smallint,因为每天商品的上架下架,日积月累,商品数据极有可能超过smallint类型的65535.")]),s._v(" "),n("p",[n("img",{attrs:{src:a(516),alt:""}})])]),s._v(" "),n("li",[n("p",[s._v("浮点型的数据 float 4字节 和double 8字节 不精准;  DECIMAL 精准.")]),s._v(" "),n("p",[s._v("eg: 超市信息系统 就推荐用"),n("strong",[s._v("DECIMAL 涉及金钱计算")]),s._v(" 分毫不差..")]),s._v(" "),n("ul",[n("li",[s._v("定义一个 "),n("code",[s._v("double price")]),s._v(" 0.47 + 0.44 + 0.19 = 1.09999999...")]),s._v(" "),n("li",[s._v("why？float和double是采用二进制的形式存储的. 比如9.624就无法用二进制数精确表达,就会取近似值.")]),s._v(" "),n("li",[s._v("DECIMAL 会把小数和整数部分拆开 分别转换为十六进制存储.")])])]),s._v(" "),n("li",[n("p",[s._v("文本类型 字符串："),n("strong",[s._v("char")]),s._v(" "),n("strong",[s._v("varchar")]),s._v("    text   enum  set")]),s._v(" "),n("ul",[n("li",[s._v("text 不需要知道文本的长度 但mysql不允许其作为主键")])])]),s._v(" "),n("li",[n("p",[s._v("时间类型："),n("strong",[s._v("datetime")]),s._v(" 与 TIMESTAMP")])])]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"_03-创建和修改表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_03-创建和修改表"}},[s._v("#")]),s._v(" 03 创建和修改表")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("约束: 非空、唯一性、自增 、默认值....")]),s._v(" "),n("ul",[n("li",[s._v("AUTO_INCREMENT自增字段会在最大值的基础上加1")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("复制表")]),s._v(" 创建一个相同结构的空表")]),s._v(" "),n("p",[n("code",[s._v("CREATE TABLE demo.importheadhist LIKE demo.importhead;")])])])]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"_04-操作表记录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_04-操作表记录"}},[s._v("#")]),s._v(" 04 操作表记录")]),s._v(" "),n("ul",[n("li",[n("p",[n("font",{attrs:{color:"red"}},[s._v("插入查询结果")])],1),s._v(" "),n("p",[n("font",{attrs:{size:"2",color:"gray"}},[s._v("门店每天的销售流水都很多，日积月累，流水表变得越来越大。如果就让它这么不断地增长，数据量甚至会达到数亿条，占据的存储空间达到几十个 G。虽然 MySQL 可以处理这样比较大的数据表，但是每次操作的响应时间就会延长，这会导致系统的整体效率下降。可以开发了一个日结处理，当天算清所有账目。")])],1),s._v(" "),n("p",[s._v("举个例子, 在超市信息系统的 MySQL 数据库中, 历史流水表设计与流水表非常类似. 不同的是, 历史流水表增加了一些字段来标识历史流水的状态, 比如日结时间字段, 是用来记录日结操作是什么时候进行的.")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" \n历史流水表（日结时间字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("其他字段）\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" \n  \t获取当前时间函数，其他字段\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 流水表\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" 条件\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("不要随便修改主键字段的值")])]),s._v(" "),n("li",[n("p",[n("font",{attrs:{color:"red"}},[s._v("ON DUPLICATE KEY UPDATE")]),s._v("的使用")],1),s._v(" "),n("blockquote",[n("p",[s._v("如果我们把查询的结果插入到表中时,导致主键约束或者唯一性约束被破坏了,就可以用“ON DUPLICATE”关键字进行处理. 它告诉 MySQL,如果遇到重复的数据,该如何处理。")])]),s._v(" "),n("p",[s._v("参考链接: "),n("code",[s._v("https://www.jianshu.com/p/6ecda3af29c9")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*将门店A和门店B进行连锁\n假设我们要把门店B的商品数据,插入到门店A的商品表中去,\n如果有重复的商品编号itemnumber(是主键id),\n就用门店B的条码barcode替换门店A的条码;用门店B的商品名称goodsname替换门店A的商品名称\n如果没有重复的编号，\n就直接把门店B的商品数据插入到门店A的商品表中\n*/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("goodsmaster \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("goodsmaster1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" a\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DUPLICATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" barcode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("barcode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("goodsname"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("goodsname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("删除记录后再插入记录,会出现主键字段值不连续的情况..")]),s._v(" "),n("p",[s._v("解决办法: 可以通过显式指定主键值的办法插入数据，而不是省略主键值让它自增")])])]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"_05-如何正确设置主键"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_05-如何正确设置主键"}},[s._v("#")]),s._v(" 05 如何正确设置主键")]),s._v(" "),n("blockquote",[n("p",[s._v("思路一: 业务字段做主键")]),s._v(" "),n("p",[s._v("思路二: 使用自增字段做主键")]),s._v(" "),n("p",[s._v("思路三: 手动赋值字段做主键")])]),s._v(" "),n("p",[s._v("(´▽｀)   "),n("strong",[s._v("详见05.md")])]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"_06-做关联查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_06-做关联查询"}},[s._v("#")]),s._v(" 06 做关联查询")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("外键就是 "),n("strong",[s._v("从表")]),s._v(" 中用来引用 "),n("strong",[s._v("主表")]),s._v(" 中数据的那个公共字段")])]),s._v(" "),n("li",[n("p",[s._v("MySQL 系统会根据外键约束的定义, 监控对主表中数据的删除操作。如果发现要删除的主表记录, 正在被从表中某条记录的外键字段所引用, MySQL 就会提示错误, 从而确保了关联数据不会缺失."),n("br"),s._v("\n(实则上就是保证外键字段值 是外键关联的另一张表的字段 所拥有的值)")])]),s._v(" "),n("li",[n("p",[s._v("可以通过 SQL 语句来查看外键约束的相关信息, 这里需要用到 MySQL 自带的、用于存储系统信息的数据库：information_schema。")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[s._v("\nmysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     constraint_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 表示外键约束名称")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     table_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 表示外键约束所属数据表的名称")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     column_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 表示外键约束的字段名称")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     referenced_table_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 表示外键约束所参照的数据表名称")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     referenced_column_name "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 表示外键约束所参照的字段名称")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     information_schema"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("KEY_COLUMN_USAGE\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v("\n    \t\t\t "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 可以通过show create table table_name;语句查看外键约束名称")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     constraint_name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fk_importdetails_importhead'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 外键约束名称")]),s._v("\n    \t\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("font",{attrs:{color:"red"}},[s._v("可以不用外键约束,但要想办法 "),n("strong",[s._v("通过应用层面的附加逻辑")]),s._v(" ,来实现外键约束的功能,确保数据的一致性!!!!")]),s._v("\n(大并发的场景,外键约束带来的资源消耗会让系统吃不消.)")],1)])]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"_07-where与having"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_07-where与having"}},[s._v("#")]),s._v(" 07 where与having")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("mysql优化器在制定查询计划的时候, 会对查询进行优化, 比如重写查询语句, 目的是提高查询的速度效率, 不会机械按照固定的顺序执行"),n("br"),s._v(" "),n("font",{attrs:{size:"2",color:"gray"}},[s._v("所以sql优化器可能会导致 真实情况是先where缩小范围再inner join连表")])],1)]),s._v(" "),n("li",[n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" b "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" c "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("transdate "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operatorname "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 按照日期、收银员分组")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HAVING")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("transdate "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-12-10'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-12-11'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("SUM")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("salesvalue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 可以将时间的筛选用where语句实现")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("transdate "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-12-12'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020-12-11'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 先按日期筛选")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("transdate "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operatorname \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HAVING")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("SUM")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("salesvalue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 后按金额筛选")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])])])]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"_08-聚合函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_08-聚合函数"}},[s._v("#")]),s._v(" 08 聚合函数")]),s._v(" "),n("ul",[n("li",[s._v("count(*) | count(1) : 统计一共有多少条记录;  count(字段): 统计有多少个不为空的字段值"),n("br"),s._v("\n若字段是主键 count(字段最快) ; count(1) 比count(*) 稍微高效一点..")]),s._v(" "),n("li",[s._v("LEFT(str, n): 表示返回字符串 str 最左边的 n 个字符"),n("br"),s._v(" "),n("font",{attrs:{size:"2",color:"gray"}},[s._v("搭配使用 --- GROUP BY LEFT(a.transdate,10)       ORDER BY LEFT(a.transdate,10)")]),n("br"),s._v(" "),n("font",{attrs:{size:"2",color:"gray"}},[s._v("要知道LEFT(transdate,10)返回的结果是销售时间按照格式YYYY-MM-DD的值, 是按照这个值进行的分组")])],1)]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"_09-日志"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_09-日志"}},[s._v("#")]),s._v(" 09 日志")]),s._v(" "),n("p",[n("strong",[s._v("通用查询日志")])]),s._v(" "),n("blockquote",[n("p",[s._v("通用查询日志记录了所有用户的连接开始时间和截止时间 以及发给 MySQL 数据库服务器的所有 SQL 指令。")])]),s._v(" "),n("p",[n("strong",[s._v("慢查询日志")])]),s._v(" "),n("blockquote",[n("p",[s._v("慢查询日志用来记录执行时间超过指定时长的查询"),n("br"),s._v("\n它的主要作用是，帮助我们发现那些执行时间特别长的 SQL 查询, 并且有针对性地进行优化, 从而提高系统的整体效率.")])]),s._v(" "),n("p",[n("strong",[s._v("错误日志")])]),s._v(" "),n("blockquote",[n("p",[s._v("错误日志记录了 MySQL 服务器启动、停止运行的时间，以及系统启动、运行和停止过程中的诊断信息, 包括错误、警告和提示等.  错误日志默认是开启的.")])]),s._v(" "),n("p",[n("strong",[s._v("二进制日志")])]),s._v(" "),n("blockquote",[n("p",[s._v("主要用于主从服务器之间的数据同步, 以及服务器遇到故障时数据的无损失恢复")])]),s._v(" "),n("p",[n("strong",[s._v("中继日志")])]),s._v(" "),n("blockquote",[n("p",[s._v("就是主从服务器架构中, 从服务器用来存放主服务器二进制日志内容的一个中间文件. 从服务器通过读取中继日志的内容, 来同步主服务器上的操作.")])]),s._v(" "),n("p",[n("strong",[s._v("回滚日志")])]),s._v(" "),n("blockquote",[n("p",[s._v("用来存储事务中数据更新前的状态, 以便回滚和保持其他事务的数据一致性.")]),s._v(" "),n("p",[s._v("有了它, 我们就可以通过数据库的全量备份和二进制日志中保存的增量信息, 完成数据库的无损失恢复.")])]),s._v(" "),n("p",[n("strong",[s._v("重做日志")])]),s._v(" "),n("blockquote",[n("p",[s._v("是为了确保数值持久性、防止数据更新丢失的一种日志.")])]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"_10-数据的备份"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-数据的备份"}},[s._v("#")]),s._v(" 10 数据的备份")]),s._v(" "),n("blockquote",[n("p",[s._v("数据备份的工具 mysqldump, 以及用命令行客户端工具“mysql”和 SQL 语句“SOURCE”进行数据恢复的方法.用于导出数据表中数据的语句“SELECT … INTO OUTFILE”和导入的语句“LOAD DATA”。这些都是在备份数据时必不可少的, 对确保数据的安全性至关重要。")]),s._v(" "),n("p",[s._v("“LOAD DATA”是很好用的工具, 因为它的数据导入速度是非常惊人的. 一个 400 万条数据的文件, 用“LOAD DATA”语句, 只需要几分钟就可以完成, 而其他的方法, 比如使用 Workbench 来导入数据, 就需要花费好几个小时.")])]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("Ps: 设计表, 业务优先, 三大范式等.(´▽｀)")])])}),[],!1,null,null,null);t.default=e.exports},515:function(s,t,a){s.exports=a.p+"assets/img/WechatIMG19.3116a766.png"},516:function(s,t,a){s.exports=a.p+"assets/img/WechatIMG14.dc89bd15.jpeg"}}]);