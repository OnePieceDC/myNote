(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{1221:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("blockquote",[n("p",[s._v("单表查询完整语法")]),s._v(" "),n("p",[s._v("select  distinct 字段1,字段2... from 库名.表名"),n("br"),s._v("\n        where 条件"),n("br"),s._v("\ngroup by 分组字段"),n("br"),s._v("\nhaving 条件"),n("br"),s._v("\norder by 排序字段"),n("br"),s._v("\nlimit 限制条数;")]),s._v(" "),n("p",[s._v("重中之重！！关键字的优先级如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 先去看看有没有'库名.表名'这个文件,若有 打开此文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 一行行的过滤 将表中符合'条件'的记录筛选出来 ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 将筛选出的记录 通过某一字段(字段值相同的归为一类) 进行分类 ==> 组")]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 若没有group by 则整体为一个组")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 以组为单位进一步过滤 过滤掉不符合条件的组 ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- select与from中间的代码")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 去重 将查询出来的重复记录过滤掉")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 根据某个字段 对记录进行排序")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 限制结果的显示条数")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])]),s._v(" "),n("hr"),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 这表有设计不合理的地方 但别在意 只是建出来为单表查询服务的！(´▽｀)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unique")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("auto_increment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 员工id")]),s._v("\n  name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 姓名")]),s._v("\n  sex "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'male'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'female'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'male'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 性别")]),s._v("\n  age "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 年龄")]),s._v("\n  hire_date "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("date")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 入职日期")]),s._v("\n  post "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 岗位")]),s._v("\n  post_comment "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 职位描述")]),s._v("\n  salary "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 薪水")]),s._v("\n  office "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 办公室")]),s._v("\n  depart_id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 部门编号")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("hr"),s._v(" "),n("h2",{attrs:{id:"简单查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简单查询"}},[s._v("#")]),s._v(" 简单查询")]),s._v(" "),n("blockquote",[n("p",[s._v("四则运算、函数 concat concat_ws、case语句、指定列")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 先看有没有employee这张表,打开表读表中的一行行数据 `*` 代表每行数据的全部字段都要.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("post "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" post "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# distinct作用对象不是字段 是每行记录！")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 字段结合四则运算")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" annual_salary "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给字段起别名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" name 名字"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" 年薪 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# as可以省略掉 字段名+空格+别名")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 使用函数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("database")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前使用的数据库")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前登录的用户")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- concat函数很重要！！用于拼接字符串")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 特别是在数据库迁移的时候 将旧表的数据拼一拼放到新表里")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" concat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'姓名'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("concat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'年薪:'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- concat_ws函数 第一个参数为分隔符")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" concat_ws"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'姓名'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" new_name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 结合case语句 (多分支的if-else判断)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- case语句了解即可 通常都是拿到数据后用python语言for循环if-else判断来解决")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\n\tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),s._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" NAME "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'egon'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v("\n    \tNAME \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" NAME "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'alex'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" \n    \tCONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'_BIGSB'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSE")]),s._v(" \n    \tconcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SB'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" new_name \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\n\temp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br")])]),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*指定列*/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 123 as other --:> 在查询结果后面额外增添一列 别名为other 列值全为123")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" NM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" other "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- max/min/sum 注意: 此处映射部分的sql语句子查询应满足只返回一个数据！！")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" \n\tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("666")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" depart "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" mid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 等同于123 as mid,")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" depart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" nid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tage\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 它相当于每一行都要根据info.depart_id的值去映射depart表中的title值.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意: 效率很低！假设info表有7行数据,则除了info表自身查询的一次还有每次的关联查询,共8次.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" \n\tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" title "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" depart "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" depart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("depart_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" x1\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("hr"),s._v(" "),n("h2",{attrs:{id:"where-条件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#where-条件"}},[s._v("#")]),s._v(" where 条件")]),s._v(" "),n("blockquote",[n("p",[s._v("where字句中可以使用:")]),s._v(" "),n("p",[s._v("<1)     比较运算符：>\t<\t>=\t<=\t!="),n("br"),s._v("\n<2)     between 80 and 100 值在 [80,100]闭区间"),n("br"),s._v("\n❤️)     in(80,90,100) 值是10或20或30\tnot in (1,4,6)"),n("br"),s._v("\n<4)     like 'egon%'"),n("br"),s._v("\n        pattern可以是%或_ \t%表示任意多字符\t_表示一个字符"),n("br"),s._v("\n<5)\t逻辑运算符: 在多个条件直接可以使用逻辑运算符 and or not")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 等同于")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 等同于")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 判断某个字段值是否为NULL 不能用等号 需要用is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" post_comment "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" post_comment "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 注意！！设置字段值为''空字符串 并不等同于null (o^^o)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" post_comment"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ji%'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ji_'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 声明 / 之后的字符不作为通配符使用")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/_ji_'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("hr"),s._v(" "),n("h2",{attrs:{id:"group-by-分组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#group-by-分组"}},[s._v("#")]),s._v(" group by 分组")]),s._v(" "),n("p",[s._v("将经历过where条件筛选的多条记录进行归类."),n("br"),s._v("\n注意哈! 没有where条件相当于所有条件都为真！相当于写了个 where 1>0 .")]),s._v(" "),n("blockquote",[n("p",[s._v("如果我们用unique的字段作为分组的依据, 则每一条记录自成一组, 这种分组没有意义"),n("br"),s._v("\n多条记录之间的某个字段值相同, 该字段通常用来作为分组的依据")])]),s._v(" "),n("p",[n("code",[s._v("set sql_mode='only_full_group_by';")]),s._v(" (sql模式了解 "),n("font",{attrs:{color:"blue"}},[s._v("严格模式.")]),s._v(")"),n("br"),s._v(" "),n("font",{attrs:{color:"brown"}},[s._v("分完组后 能看到的字段只有分组的字段以及聚合的结果.")])],1),s._v(" "),n("blockquote",[n("p",[s._v("聚合函数")]),s._v(" "),n("p",[s._v("max、min、avg、sum、count"),n("br"),s._v("\n在分完组后,以组为单位统计出一个结果,一个组只出一个结果")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 举栗: 取每个部门的最高工资、取每个部门的员工数、取男生数和女生数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- [小窍门] '每'这个字后面的字段,就是我们分组的依据")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" sex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" sex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 取每个部门男员工的平均薪资")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sex"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'male'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 取每个部门年龄大于20岁的员工的平均薪资")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 扩展")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- GROUP BY关键字和GROUP_CONCAT()函数一起使用")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("GROUP_CONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" post"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询岗位名以及岗位包含的所有员工名字")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[n("strong",[s._v("注意")]),s._v(":  "),n("code",[s._v("group by b,c")]),s._v(" -- 是将b和c看作一个整体进行分组")]),s._v(" "),n("p",[n("img",{attrs:{src:a(513),alt:""}})]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" test "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\na 甲 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\na 乙 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nb 乙 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("hr"),s._v(" "),n("h2",{attrs:{id:"having-过滤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#having-过滤"}},[s._v("#")]),s._v(" having 过滤")]),s._v(" "),n("blockquote",[n("p",[s._v("where是针对分组前所有的记录进行过滤！"),n("br"),s._v("\nhaving是针对分组后的组进行过滤,不是记录！")]),s._v(" "),n("p",[s._v("能否使用聚合函数？where不可以,having可以.")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 取出男员工的平均薪资大于10000的部门｜取出各部门平均薪资大于10000的男员工")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" post "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sex"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'male'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" post "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# select salary from employee where max(salary)>10000;(报错！！)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为啥不报错？因为这个位置的聚合函数是在分组之后运行的.没有group by就相当于整体是一组.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 取所有人的最高薪资")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("hr"),s._v(" "),n("h2",{attrs:{id:"order-by-排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#order-by-排序"}},[s._v("#")]),s._v(" order by 排序")]),s._v(" "),n("blockquote",[n("p",[s._v("order by是在分组之后的 是可以使用聚合函数的.")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[s._v("按单列排序\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" salary "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ASC")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 升序(默认)")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" salary "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 降序")]),s._v("\n\n按多列排序:先按照age升序排序"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("如果年纪相同"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("则按照薪资降序排序\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 取出男员工的平均薪资大于10000的部门并按照平均薪资降序排列.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" \npost \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sex"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'male'")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" post \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 是对组进行的排序！所以在这个场景下只能使用分组字段和聚合函数.")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("hr"),s._v(" "),n("h2",{attrs:{id:"limit"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#limit"}},[s._v("#")]),s._v(" limit")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" salary "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认初始位置为0 ")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 分页展示")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从第0开始,向后获取5条数据 即 1-5行的数据")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" salary "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从第5开始,向后获取5条数据 即 6-10行的数据")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" salary "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("hr"),s._v(" "),n("h2",{attrs:{id:"正则表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[s._v("#")]),s._v(" 正则表达式")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看所有员工中名字是jin开头，n或者g结尾的员工信息")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^jin.*[gn]$'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("hr")])}),[],!1,null,null,null);t.default=e.exports},513:function(s,t,a){s.exports=a.p+"assets/img/WechatIMG13.ffabb642.png"}}]);