(window.webpackJsonp=window.webpackJsonp||[]).push([[223],{1161:function(s,t,n){"use strict";n.r(t);var a=n(0),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("python3统一了类与类型的概念"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" 类即类型"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("属性 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 即属性引用\n★ 类的两大操作\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"属性引用"')]),s._v("\n     类的定义里的属性 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 数据属性 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" 函数属性\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 在类的定义阶段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"注意!不是类实例化的时候哦"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("就会执行类里面的代码"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("开辟一个namescope\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" namescope"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("类"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("中的属性是共享给所有的类实例化对象的 【共有属性】\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"类实例化"')]),s._v("\n        调用类对象"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类的实例化 会开辟一个个空的namescope"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n        类实例化对象开辟一个空的scope后"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("紧接着就会触发绑定方法__init__的执行"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("初始化实例化对象\n        会将类的实例化obj作为绑定方法的第一个形参"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("约定俗称是self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("的值传入\n        注意"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" __init__里面不可有"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n★ 类的实例化对象可进行"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"属性引用"')]),s._v("!!\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 引用数据属性\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 类中的数据属性\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 独有的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("优先级最高"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" namescope"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("类实例化"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("里面存放的就是实例化对象的【独有属性】\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 引用方法属性\n        即类中的函数属性 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"方法是‘从属于’对象的函数"')]),s._v("\n        Ps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("方法不是类实例所特有的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("比如列表对象也具有append、insert等方法 【类就是类型】\n           d "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'x'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 本质上是 d "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("dict")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'x'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nnamescope"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("类"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("、namescope"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("实例化对象"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("都可通过 "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"obj.__dict__"')]),s._v("查看namescope里面的属性\n\n代码块"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("模块、函数、类"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("执行代码时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("以及类的实例化的时候"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("会开辟namespace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n特别注意的是"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("函数里函数体的代码在调用时执行!!\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" types "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" MethodType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" FunctionType\n\n\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 注意哈!!有个空字典的结果返回,并不意味着开辟了一个空的命名空间,函数在调用的时候才会开辟命名空间")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__dict__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 类A在定义阶段就会执行里面的代码,开辟命名空间.(不是在实例化的时候开辟哦!!)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 此处namespace(类A)里已经对a名称进行了绑定 {a:3}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 类A还在定义的过程中,全局命名空间里还没有A")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 准确点说,这里涉及到【类中变量引用的规则】,官方解释:")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    1> 未绑定的局部变量将在全局命名空间中查找")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    2> 在类代码块中定义的名称的作用域/namespace作用范围,不会扩展到方法的代码块中")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       包括列表推导式和生成器表达式 Ps:可以通过 obj.属性 -- 即属性引用的方式来进行访问")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# print(A.a)  # NameError:name 'A' is not defined")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dc'")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@classmethod")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@staticmethod")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 这里涉及到类中变量引用的规则")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 类的实例化会先开辟一个命名空间,然后通过__init__进行初始化存放该实例化对象独有的数据属性")]),s._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dc'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <__main__.A object at 0x7fbcebe8dca0>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <class '__main__.A'>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n一般单独def的变量是函数对象.\n被@classmethod装饰的函数属性,不管是类还是实例化对象进行属性引用,引用的都是PyMethodObject方法对象.\n第一个参数是self的函数属性,被实例化对象进行属性引用,引用的是PyMethodObject方法对象.\n除此之外,进行的属性引用(eg:@staticmethod),引用的都是PyFunctionObject函数对象.\n\n函数定义: PyCodeObject + def == PyFunctionObject"函数对象"\n类定义:\n     有"self"特征的PyFunctionObject 将与类实例化对象进行绑定 进化为 PyMethodObject"方法对象"\n     有"@classmethod"特征的PyFunctionObject 将与类对象进行绑定 进化为 PyMethodObject"方法对象"\nPyMethodObject和PyFunctionObject在调用时进化成PyFrameObject,开辟一块命名空间,执行函数体代码.\n"""')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 通过`from types import MethodType, FunctionType`来判断")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    类实例化对象引用的方法属性是函数对象还是方法对象 前者是<function ...> 后者是<bound method ...> ")]),s._v("\ntrain_list "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <function f at 0x7fbcebe8a9d0>是函数对象!")]),s._v("\n    A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fun1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <function A.fun1 at 0x7fbcebe8aa60>是函数对象!")]),s._v("\n    x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fun1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <bound method A.fun1 of <__main__.A object at 0x7fbcebe8dca0>>是方法对象!")]),s._v("\n    A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fun2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <bound method A.fun2 of <class '__main__.A'>>是方法对象!")]),s._v("\n    x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fun2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <bound method A.fun2 of <class '__main__.A'>>是方法对象!")]),s._v("\n    A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <function A.foo at 0x7fbcebe8aaf0>是函数对象!")]),s._v("\n    x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <function A.foo at 0x7fbcebe8aaf0>是函数对象!")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" item "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" train_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("isinstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" FunctionType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-interpolation"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('f"')]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('是函数对象!"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-interpolation"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('f"')]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('是方法对象!"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nA"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fun1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__dict__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br")])]),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("f1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("f2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不加self报错!")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 也许你会想,执行`m()` namescope(f2)里面没有的话,就去namescope(A)里面找???")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意哦,【类中变量引用的规则】")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# m()  # NameError:name 'm' is not defined")]),s._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@staticmethod")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- 静态方法,意味着不会自动绑定类实例化对象")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nb "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n分析如下:\n"""')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("的本质是 A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n   a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("、b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("进行方法的绑定"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("相当于A进行了两次函数调用"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("函数调用会开辟新的命名空间\n   所以这里a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("、b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("开辟的命名空间是不一样的"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1 的结果为"),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v(" \n   虽然a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1和b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1在这个过程中引用的都是namescope"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("类A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("中同一个PyFunctionObject f1\n   但f1分别与a和b进行绑定后"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("进化出来的PyMethodObject是不同的\n   换个说法"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n       Pyhon是动态语言"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("对象和类的成员并不一定会一致\n       通过a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1这样获得的对象"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("并不是真正的A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("对与不同的类实例来说也不是同一个对象"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n       这是因为a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1返回的是一个将实例a绑定到了self上的新创建的一个临时的bound method"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1是生成了一个捆绑A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1和a的临时对象"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n       当调用a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("的时候其实是调用了A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n       是一个把实例本身当作第一个参数也就是self传进去的封装了一层的函数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("m "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("m 的结果为"),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);